{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-09-05T06:06:14.603806Z", "invocation_id": "d4f52aaf-82dc-4ae9-b404-dfd2ec8c6ff2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-05T06:05:37.594572Z", "completed_at": "2024-09-05T06:05:37.603782Z"}, {"name": "execute", "started_at": "2024-09-05T06:05:37.604113Z", "completed_at": "2024-09-05T06:05:40.295029Z"}], "thread_id": "Thread-1", "execution_time": 2.7011871337890625, "adapter_response": {"_message": "CREATE TABLE (1.3k rows, 60.7 KiB processed)", "code": "CREATE TABLE", "rows_affected": 1294, "bytes_processed": 62112, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "a9f16a11-3ad1-4fbb-b83a-7f24067d89ad", "slot_ms": 7115}, "message": "CREATE TABLE (1.3k rows, 60.7 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_hlal_2019_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`hlal`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_hlal_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-05T06:05:40.299007Z", "completed_at": "2024-09-05T06:05:40.303376Z"}, {"name": "execute", "started_at": "2024-09-05T06:05:40.303712Z", "completed_at": "2024-09-05T06:06:00.927528Z"}], "thread_id": "Thread-1", "execution_time": 20.629377841949463, "adapter_response": {"_message": "CREATE TABLE (1.3k rows, 37.6 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1294, "bytes_processed": 39419620, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "856bfb7d-2e3e-4fe6-b929-fed535ba1194", "slot_ms": 169921}, "message": "CREATE TABLE (1.3k rows, 37.6 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_hlal_2019_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hlal_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-05T06:06:00.933105Z", "completed_at": "2024-09-05T06:06:00.942586Z"}, {"name": "execute", "started_at": "2024-09-05T06:06:00.942926Z", "completed_at": "2024-09-05T06:06:08.066079Z"}], "thread_id": "Thread-1", "execution_time": 7.134194850921631, "adapter_response": {"_message": "CREATE TABLE (224.9k rows, 83.5 MiB processed)", "code": "CREATE TABLE", "rows_affected": 224900, "bytes_processed": 87548062, "bytes_billed": 367001600, "location": "US", "project_id": "first-project-262802", "job_id": "1bb6c452-000b-467a-a100-ee046430fe66", "slot_ms": 18282}, "message": "CREATE TABLE (224.9k rows, 83.5 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.int_stock_analysis", "compiled": true, "compiled_code": "with\n\nspy as ( select * from `first-project-262802`.`stock_analysis`.`stg_spy_1993_2024` )\n, spus as ( select * from `first-project-262802`.`stock_analysis`.`stg_spus_2019_2024` )\n, hlal as ( select * from `first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024` )\n\n, aapl as ( select * from `first-project-262802`.`stock_analysis`.`stg_aapl_1993_2024` )\n, abbv as ( select * from `first-project-262802`.`stock_analysis`.`stg_abbv_2013_2024` )\n, adbe as ( select * from `first-project-262802`.`stock_analysis`.`stg_adbe_1993_2024` )\n, amd as ( select * from `first-project-262802`.`stock_analysis`.`stg_amd_1993_2024` )\n, amzn as ( select * from `first-project-262802`.`stock_analysis`.`stg_amzn_1997_2024` )\n, avgo as ( select * from `first-project-262802`.`stock_analysis`.`stg_avgo_2009_2024` )\n, bac as ( select * from `first-project-262802`.`stock_analysis`.`stg_bac_1993_2024` )\n, brk_b as ( select * from `first-project-262802`.`stock_analysis`.`stg_brk-b_1996_2024` )\n, cost as ( select * from `first-project-262802`.`stock_analysis`.`stg_cost_1993_2024` )\n, crm as ( select * from `first-project-262802`.`stock_analysis`.`stg_crm_2004_2024` )\n, cvx as ( select * from `first-project-262802`.`stock_analysis`.`stg_cvx_1993_2024` )\n, goog as ( select * from `first-project-262802`.`stock_analysis`.`stg_goog_2004_2024` )\n, googl as ( select * from `first-project-262802`.`stock_analysis`.`stg_googl_2004_2024` )\n, hd as ( select * from `first-project-262802`.`stock_analysis`.`stg_hd_1993_2024` )\n, jnj as ( select * from `first-project-262802`.`stock_analysis`.`stg_jnj_1993_2024` )\n, jpm as ( select * from `first-project-262802`.`stock_analysis`.`stg_jpm_1993_2024` )\n, ko as ( select * from `first-project-262802`.`stock_analysis`.`stg_ko_1993_2024` )\n, lly as ( select * from `first-project-262802`.`stock_analysis`.`stg_lly_1993_2024` )\n, ma as ( select * from `first-project-262802`.`stock_analysis`.`stg_ma_2006_2024` )\n, meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_meta_2012_2024` )\n, mrk as ( select * from `first-project-262802`.`stock_analysis`.`stg_mrk_1993_2024` )\n, msft as ( select * from `first-project-262802`.`stock_analysis`.`stg_msft_1993_2024` )\n, nflx as ( select * from `first-project-262802`.`stock_analysis`.`stg_nflx_1993_2024` )\n, nvda as ( select * from `first-project-262802`.`stock_analysis`.`stg_nvda_1999_2024` )\n, pep as ( select * from `first-project-262802`.`stock_analysis`.`stg_pep_1993_2024` )\n, pg as ( select * from `first-project-262802`.`stock_analysis`.`stg_pg_1993_2024` )\n, tmo as ( select * from `first-project-262802`.`stock_analysis`.`stg_tmo_1993_2024` )\n, tsla as ( select * from `first-project-262802`.`stock_analysis`.`stg_tsla_2010_2024` )\n, unh as ( select * from `first-project-262802`.`stock_analysis`.`stg_unh_1993_2024` )\n, v as ( select * from `first-project-262802`.`stock_analysis`.`stg_v_1993_2024` )\n, wmt as ( select * from `first-project-262802`.`stock_analysis`.`stg_wmt_1993_2024` )\n, xom as ( select * from `first-project-262802`.`stock_analysis`.`stg_xom_1993_2024` )\n\n\nselect * , 'SPY' as symbol from spy\nunion all\nselect * , 'SPUS' as symbol from spus\nunion all\nselect * , 'HLAL' as symbol from hlal\nunion all\n\nselect * , 'AAPL' as symbol from aapl\nunion all\nselect * , 'ABBV' as symbol from abbv\nunion all\nselect * , 'ADBE' as symbol from adbe\nunion all\nselect * , 'AMD' as symbol from amd\nunion all\nselect * , 'AMZN' as symbol from amzn\nunion all\nselect * , 'AVGO' as symbol from avgo\nunion all\nselect * , 'BAC' as symbol from bac\nunion all\nselect * , 'BRK-B' as symbol from brk_b\nunion all\nselect * , 'COST' as symbol from cost\nunion all\nselect * , 'CRM' as symbol from crm\nunion all\nselect * , 'CVX' as symbol from cvx\nunion all\nselect * , 'GOOG' as symbol from goog\nunion all\nselect * , 'GOOGL' as symbol from googl\nunion all\nselect * , 'HD' as symbol from hd\nunion all\nselect * , 'JNJ' as symbol from jnj\nunion all\nselect * , 'JPM' as symbol from jpm\nunion all\nselect * , 'KO' as symbol from ko\nunion all\nselect * , 'LLY' as symbol from lly\nunion all\nselect * , 'MA' as symbol from ma\nunion all\nselect * , 'META' as symbol from meta\nunion all\nselect * , 'MRK' as symbol from mrk\nunion all\nselect * , 'MSFT' as symbol from msft\nunion all\nselect * , 'NFLX' as symbol from nflx\nunion all\nselect * , 'NVDA' as symbol from nvda\nunion all\nselect * , 'PEP' as symbol from pep\nunion all\nselect * , 'PG' as symbol from pg\nunion all\nselect * , 'TMO' as symbol from tmo\nunion all\nselect * , 'TSLA' as symbol from tsla\nunion all\nselect * , 'UNH' as symbol from unh\nunion all\nselect * , 'V' as symbol from v\nunion all\nselect * , 'WMT' as symbol from wmt\nunion all\nselect * , 'XOM' as symbol from xom", "relation_name": "`first-project-262802`.`stock_analysis`.`int_stock_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-05T06:06:08.070406Z", "completed_at": "2024-09-05T06:06:08.074082Z"}, {"name": "execute", "started_at": "2024-09-05T06:06:08.074347Z", "completed_at": "2024-09-05T06:06:14.596483Z"}], "thread_id": "Thread-1", "execution_time": 6.526853084564209, "adapter_response": {"_message": "CREATE TABLE (224.9k rows, 85.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 224900, "bytes_processed": 89238887, "bytes_billed": 90177536, "location": "US", "project_id": "first-project-262802", "job_id": "766e5d4e-da5a-43ce-b1b1-dd43c97ffe9f", "slot_ms": 11392}, "message": "CREATE TABLE (224.9k rows, 85.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stock_analysis", "compiled": true, "compiled_code": "with\n\nstock_analysis as ( select * from `first-project-262802`.`stock_analysis`.`int_stock_analysis` )\n\n, symbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_symbols_meta` )\n\nselect\n    *\nfrom stock_analysis\nleft join symbols_meta using (symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`stock_analysis`"}], "elapsed_time": 37.78884506225586, "args": {"macro_debugging": false, "log_level": "info", "send_anonymous_usage_stats": true, "source_freshness_run_project_hooks": false, "warn_error_options": {"include": [], "exclude": []}, "log_format": "default", "strict_mode": false, "introspect": true, "partial_parse": true, "favor_state": false, "defer": false, "log_level_file": "debug", "invocation_command": "dbt run --select base_hlal_2019_2024.sql stg_hlal_2019_2024.sql int_stock_analysis.sql stock_analysis.sql", "show_resource_report": false, "require_explicit_package_overrides_for_builtin_materializations": true, "print": true, "project_dir": "/Users/ahmed/Desktop/dbt/stock_analysis", "version_check": true, "which": "run", "log_format_file": "debug", "populate_cache": true, "indirect_selection": "eager", "quiet": false, "cache_selected_only": false, "vars": {}, "use_colors": true, "write_json": true, "exclude": [], "use_colors_file": true, "profiles_dir": "/Users/ahmed/.dbt", "select": ["base_hlal_2019_2024.sql", "stg_hlal_2019_2024.sql", "int_stock_analysis.sql", "stock_analysis.sql"], "log_file_max_bytes": 10485760, "log_path": "/Users/ahmed/Desktop/dbt/stock_analysis/logs", "require_resource_names_without_spaces": false, "empty": false, "partial_parse_file_diff": true, "printer_width": 80, "static_parser": true, "enable_legacy_logger": false}}