{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-09-03T18:54:57.230277Z", "invocation_id": "f4248ac8-198b-4d46-9c77-9177bf69b4f2", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:34.011694Z", "completed_at": "2024-09-03T17:45:34.021689Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:34.022107Z", "completed_at": "2024-09-03T17:45:37.353014Z"}], "thread_id": "Thread-1", "execution_time": 3.342395782470703, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "0eab682e-0417-4873-8b4a-d0e1c6ab95d2", "slot_ms": 6909}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_aapl_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`aapl`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_aapl_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:37.357632Z", "completed_at": "2024-09-03T17:45:37.361231Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:37.361799Z", "completed_at": "2024-09-03T17:45:40.241115Z"}], "thread_id": "Thread-1", "execution_time": 2.884617328643799, "adapter_response": {"_message": "CREATE TABLE (2.9k rows, 137.6 KiB processed)", "code": "CREATE TABLE", "rows_affected": 2936, "bytes_processed": 140928, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "1ba38c4f-e997-4e03-9653-aed0e6bce728", "slot_ms": 6097}, "message": "CREATE TABLE (2.9k rows, 137.6 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_abbv_2013_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`abbv`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_abbv_2013_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:40.248934Z", "completed_at": "2024-09-03T17:45:40.255902Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:40.256381Z", "completed_at": "2024-09-03T17:45:43.135726Z"}], "thread_id": "Thread-1", "execution_time": 2.888636827468872, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "356fe24c-455a-4990-a790-b822ffcf17e7", "slot_ms": 6295}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_adbe_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`adbe`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_adbe_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:43.142716Z", "completed_at": "2024-09-03T17:45:43.148084Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:43.148424Z", "completed_at": "2024-09-03T17:45:45.789077Z"}], "thread_id": "Thread-1", "execution_time": 2.647609233856201, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "cfdb59e3-5c07-4d0c-add3-aeb15a196f7f", "slot_ms": 6273}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_amd_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`amd`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_amd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:45.795747Z", "completed_at": "2024-09-03T17:45:45.801540Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:45.802006Z", "completed_at": "2024-09-03T17:45:48.824439Z"}], "thread_id": "Thread-1", "execution_time": 3.0299899578094482, "adapter_response": {"_message": "CREATE TABLE (6.9k rows, 322.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 6869, "bytes_processed": 329712, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "2e86469d-3324-4cd0-9a3f-d366e6c227f9", "slot_ms": 5473}, "message": "CREATE TABLE (6.9k rows, 322.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_amzn_1997_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`amzn`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_amzn_1997_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:48.829189Z", "completed_at": "2024-09-03T17:45:48.834395Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:48.834780Z", "completed_at": "2024-09-03T17:45:51.516711Z"}], "thread_id": "Thread-1", "execution_time": 2.688875198364258, "adapter_response": {"_message": "CREATE TABLE (3.8k rows, 177.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 3793, "bytes_processed": 182064, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "8f931424-90a2-4b62-af9e-83d928f3afc3", "slot_ms": 5695}, "message": "CREATE TABLE (3.8k rows, 177.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_avgo_2009_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`avgo`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_avgo_2009_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:51.524016Z", "completed_at": "2024-09-03T17:45:51.527968Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:51.528228Z", "completed_at": "2024-09-03T17:45:54.345047Z"}], "thread_id": "Thread-1", "execution_time": 2.822136163711548, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "892ceccd-302b-4a4d-b0be-a56ef66b1ece", "slot_ms": 7387}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_bac_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`bac`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_bac_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:54.352574Z", "completed_at": "2024-09-03T17:45:54.356954Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:54.357241Z", "completed_at": "2024-09-03T17:45:57.625716Z"}], "thread_id": "Thread-1", "execution_time": 3.274158000946045, "adapter_response": {"_message": "CREATE TABLE (7.1k rows, 334.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7126, "bytes_processed": 342048, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "55205fd5-98e5-42be-b60d-a7b25399ae05", "slot_ms": 5521}, "message": "CREATE TABLE (7.1k rows, 334.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_brk-b_1996_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`brk-b`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_brk-b_1996_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:45:57.631413Z", "completed_at": "2024-09-03T17:45:57.637876Z"}, {"name": "execute", "started_at": "2024-09-03T17:45:57.638367Z", "completed_at": "2024-09-03T17:46:02.330296Z"}], "thread_id": "Thread-1", "execution_time": 4.7003700733184814, "adapter_response": {"_message": "CREATE TABLE (146.1k rows, 29.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 146100, "bytes_processed": 31278432, "bytes_billed": 31457280, "location": "US", "project_id": "first-project-262802", "job_id": "6e0b7032-4bbf-41b5-b280-61936330feac", "slot_ms": 11771}, "message": "CREATE TABLE (146.1k rows, 29.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_calendar", "compiled": true, "compiled_code": "select \n    is_workday\n    , is_holiday\n    , is_holiday_leave\n    , a_date\n    , a_date as date\n    , extract(year from a_date) as year_of_date\n    , extract(month from a_date) as month_of_date\n    , extract(day from a_date) as day_of_date\n    , day_full\n    , day_full_capital_case\n    , day_full_lower_case\n    , day_abbrev\n    , is_weekday\n    , is_weekday_by_regex\n    , day_of_week\n    , day_of_month\n    , day_of_year\n    , week_of_month\n    , format_date('%W', a_date) as week_number\n    , trim(month_full) as month_full\n    , lower(trim(month_full)) as month_full_lower_case\n    , month_abbrev\n    , month_number\n    , quarter\n    , year_short\n    , year_full\n    , fiscal_quarter\n    , fiscal_year\n    , fiscal_year_full\n    , tomorrow\n    , one_week_later\n    , one_month_later\n    , three_months_later\n    , one_year_later\nfrom `first-project-262802`.`stock`.`400_years_of_generated_dates_and_holidays`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_calendar`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:02.333237Z", "completed_at": "2024-09-03T17:46:02.335634Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:02.335862Z", "completed_at": "2024-09-03T17:46:05.372537Z"}], "thread_id": "Thread-1", "execution_time": 3.0401997566223145, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "9af30e12-a423-4384-ad20-c0547b0975f3", "slot_ms": 8584}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_cost_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`cost`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_cost_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:05.379028Z", "completed_at": "2024-09-03T17:46:05.384833Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:05.385291Z", "completed_at": "2024-09-03T17:46:08.548096Z"}], "thread_id": "Thread-1", "execution_time": 3.170524835586548, "adapter_response": {"_message": "CREATE TABLE (5.1k rows, 238.3 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5083, "bytes_processed": 243984, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "7c5915ec-f771-4f98-b12e-ca6d5b514553", "slot_ms": 7582}, "message": "CREATE TABLE (5.1k rows, 238.3 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_crm_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`crm`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_crm_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:08.554660Z", "completed_at": "2024-09-03T17:46:08.560687Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:08.561137Z", "completed_at": "2024-09-03T17:46:11.575156Z"}], "thread_id": "Thread-1", "execution_time": 3.0219531059265137, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "c6a0e3c6-a230-4ecf-8053-002576d2ee00", "slot_ms": 6314}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_cvx_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`cvx`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_cvx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:11.581029Z", "completed_at": "2024-09-03T17:46:11.586438Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:11.586981Z", "completed_at": "2024-09-03T17:46:14.607844Z"}], "thread_id": "Thread-1", "execution_time": 3.0283920764923096, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 236.4 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 242064, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "31377e1e-c1d8-4043-a134-199429494a99", "slot_ms": 6323}, "message": "CREATE TABLE (5.0k rows, 236.4 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_goog_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`goog`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_goog_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:14.613952Z", "completed_at": "2024-09-03T17:46:14.619161Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:14.619602Z", "completed_at": "2024-09-03T17:46:17.653983Z"}], "thread_id": "Thread-1", "execution_time": 3.0416958332061768, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 236.4 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 242064, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "97ebd25e-2c81-41fd-8852-377c0515d142", "slot_ms": 7800}, "message": "CREATE TABLE (5.0k rows, 236.4 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_googl_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`googl`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_googl_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:17.662729Z", "completed_at": "2024-09-03T17:46:17.670080Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:17.670597Z", "completed_at": "2024-09-03T17:46:20.307374Z"}], "thread_id": "Thread-1", "execution_time": 2.646026849746704, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "b26d276d-cd8d-4e62-aad1-1fce6ee07e4c", "slot_ms": 5520}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_hd_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`hd`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_hd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:20.313840Z", "completed_at": "2024-09-03T17:46:20.319319Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:20.319768Z", "completed_at": "2024-09-03T17:46:22.991766Z"}], "thread_id": "Thread-1", "execution_time": 2.679788112640381, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "60b06de2-89f4-49ae-8e3d-fad993e81224", "slot_ms": 6203}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_jnj_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`jnj`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_jnj_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:22.998512Z", "completed_at": "2024-09-03T17:46:23.003804Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:23.004257Z", "completed_at": "2024-09-03T17:46:25.680845Z"}], "thread_id": "Thread-1", "execution_time": 2.6839208602905273, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "1b1ab764-7a61-41b4-aa6c-68f799c46528", "slot_ms": 6708}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_jpm_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`jpm`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_jpm_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:25.688000Z", "completed_at": "2024-09-03T17:46:25.692548Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:25.693001Z", "completed_at": "2024-09-03T17:46:28.637527Z"}], "thread_id": "Thread-1", "execution_time": 2.950949192047119, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "df824c19-6ae9-4a7f-ba5d-62e6233073f0", "slot_ms": 9003}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_ko_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`ko`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_ko_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:28.643409Z", "completed_at": "2024-09-03T17:46:28.648082Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:28.648448Z", "completed_at": "2024-09-03T17:46:31.414813Z"}], "thread_id": "Thread-1", "execution_time": 2.772710084915161, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "f8e61372-e023-457b-a37b-cd2b33f41699", "slot_ms": 6586}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_lly_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`lly`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_lly_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:31.420834Z", "completed_at": "2024-09-03T17:46:31.425885Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:31.426338Z", "completed_at": "2024-09-03T17:46:34.250689Z"}], "thread_id": "Thread-1", "execution_time": 2.83109712600708, "adapter_response": {"_message": "CREATE TABLE (4.6k rows, 215.5 KiB processed)", "code": "CREATE TABLE", "rows_affected": 4598, "bytes_processed": 220704, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "809ac12e-a622-4c3c-af7a-5c1d3ffcfdd4", "slot_ms": 6305}, "message": "CREATE TABLE (4.6k rows, 215.5 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_ma_2006_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`ma`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_ma_2006_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:34.257054Z", "completed_at": "2024-09-03T17:46:34.262626Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:34.263108Z", "completed_at": "2024-09-03T17:46:37.029100Z"}], "thread_id": "Thread-1", "execution_time": 2.7735788822174072, "adapter_response": {"_message": "CREATE TABLE (3.1k rows, 144.9 KiB processed)", "code": "CREATE TABLE", "rows_affected": 3091, "bytes_processed": 148368, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "43e2a27b-7b50-41bd-89a2-1f641051cca2", "slot_ms": 6316}, "message": "CREATE TABLE (3.1k rows, 144.9 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_meta_2012_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`meta`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_meta_2012_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:37.035764Z", "completed_at": "2024-09-03T17:46:37.040972Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:37.041428Z", "completed_at": "2024-09-03T17:46:40.312650Z"}], "thread_id": "Thread-1", "execution_time": 3.2782793045043945, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "3dbb6d69-8dd2-4a2a-a5cf-554ada43e1db", "slot_ms": 5726}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_mrk_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`mrk`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_mrk_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:40.579386Z", "completed_at": "2024-09-03T17:46:40.586033Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:40.586506Z", "completed_at": "2024-09-03T17:46:43.387894Z"}], "thread_id": "Thread-1", "execution_time": 2.8102447986602783, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "d553e843-d672-45fa-823d-78f6d7c33085", "slot_ms": 6617}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_msft_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`msft`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_msft_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:43.395827Z", "completed_at": "2024-09-03T17:46:43.400123Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:43.400494Z", "completed_at": "2024-09-03T17:46:46.501120Z"}], "thread_id": "Thread-1", "execution_time": 3.1065726280212402, "adapter_response": {"_message": "CREATE TABLE (5.6k rows, 262.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5607, "bytes_processed": 269136, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "f935a76b-332d-4076-b9ad-d3886581d59b", "slot_ms": 5203}, "message": "CREATE TABLE (5.6k rows, 262.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_nflx_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`nflx`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_nflx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:46.507367Z", "completed_at": "2024-09-03T17:46:46.512577Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:46.512964Z", "completed_at": "2024-09-03T17:46:49.117958Z"}], "thread_id": "Thread-1", "execution_time": 2.61195707321167, "adapter_response": {"_message": "CREATE TABLE (6.4k rows, 302.1 KiB processed)", "code": "CREATE TABLE", "rows_affected": 6444, "bytes_processed": 309312, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "9e00a745-7a5e-4dbe-a7d9-8e7e048add36", "slot_ms": 5208}, "message": "CREATE TABLE (6.4k rows, 302.1 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_nvda_1999_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`nvda`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_nvda_1999_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:49.124624Z", "completed_at": "2024-09-03T17:46:49.130178Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:49.130627Z", "completed_at": "2024-09-03T17:46:52.175273Z"}], "thread_id": "Thread-1", "execution_time": 3.052349090576172, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "12d6b112-a370-46a4-ab1b-d0ca3bd8b329", "slot_ms": 7365}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_pep_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`pep`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_pep_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:52.180968Z", "completed_at": "2024-09-03T17:46:52.186220Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:52.186605Z", "completed_at": "2024-09-03T17:46:54.978681Z"}], "thread_id": "Thread-1", "execution_time": 2.798980236053467, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "ce9b5bb1-1c8b-4d2c-805c-71be6da852da", "slot_ms": 5038}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_pg_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`pg`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_pg_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:54.984704Z", "completed_at": "2024-09-03T17:46:54.991329Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:54.991847Z", "completed_at": "2024-09-03T17:46:57.651249Z"}], "thread_id": "Thread-1", "execution_time": 2.6680710315704346, "adapter_response": {"_message": "CREATE TABLE (1.2k rows, 55.5 KiB processed)", "code": "CREATE TABLE", "rows_affected": 1183, "bytes_processed": 56784, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "a2960393-4448-4d02-90d6-69cf114d4a7c", "slot_ms": 5492}, "message": "CREATE TABLE (1.2k rows, 55.5 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_spus_2019_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spus_2019_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spus_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:46:57.659522Z", "completed_at": "2024-09-03T17:46:57.666016Z"}, {"name": "execute", "started_at": "2024-09-03T17:46:57.666548Z", "completed_at": "2024-09-03T17:47:00.453035Z"}], "thread_id": "Thread-1", "execution_time": 2.794861078262329, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "2b41863d-cf84-4593-b844-e08f66c0c0f4", "slot_ms": 6650}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_spy_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spy_1993_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spy_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:00.459351Z", "completed_at": "2024-09-03T17:47:00.465389Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:00.465861Z", "completed_at": "2024-09-03T17:47:03.566003Z"}], "thread_id": "Thread-1", "execution_time": 3.108602285385132, "adapter_response": {"_message": "CREATE TABLE (2.5k rows, 118.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 2517, "bytes_processed": 120816, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "e4ba942f-e70b-4504-867b-cbbaf46583fc", "slot_ms": 5830}, "message": "CREATE TABLE (2.5k rows, 118.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_spy_2014_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spy_2014_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spy_2014_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:03.572699Z", "completed_at": "2024-09-03T17:47:03.578506Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:03.578968Z", "completed_at": "2024-09-03T17:47:06.601740Z"}], "thread_id": "Thread-1", "execution_time": 3.030647039413452, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 0 processed)", "code": "CREATE TABLE", "rows_affected": 8049, "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "first-project-262802", "job_id": "f3dc081a-3fb5-4bf7-8b2d-c5f00dc81199", "slot_ms": 6078}, "message": "CREATE TABLE (8.0k rows, 0 processed)", "failures": null, "unique_id": "model.stock_analysis.base_symbols_meta", "compiled": true, "compiled_code": "select \n    'Nasdaq Traded' as is_nasdaq_traded\n    , 'Symbol' as symbol\n    , 'Security Name' as security_name\n    , 'Listing Exchange' as listing_exchange\n    , 'Market Category' as market_category\n    , 'ETF' as is_ETF\n    , 'Round Lot Size' as round_lot_size\n    , 'Test Issue' as is_test_issue\n    , 'Financial Status' as financial_status\n    , 'CQS Symbol' as cqs_symbol\n    , 'NASDAQ Symbol' as nasdaq_symbol\n    , 'NextShares' as nextshares\nfrom `first-project-262802`.`stock`.`symbols_valid_meta`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_symbols_meta`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:06.607566Z", "completed_at": "2024-09-03T17:47:06.614750Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:06.615106Z", "completed_at": "2024-09-03T17:47:09.878476Z"}], "thread_id": "Thread-1", "execution_time": 3.2721760272979736, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "8815ca19-d1c9-414b-b7f2-4f19db30a981", "slot_ms": 6121}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_tmo_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`tmo`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_tmo_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:09.884063Z", "completed_at": "2024-09-03T17:47:09.889293Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:09.889671Z", "completed_at": "2024-09-03T17:47:12.504017Z"}], "thread_id": "Thread-1", "execution_time": 2.6211912631988525, "adapter_response": {"_message": "CREATE TABLE (3.6k rows, 167.2 KiB processed)", "code": "CREATE TABLE", "rows_affected": 3568, "bytes_processed": 171264, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "9ccb4a42-0ebc-4b1d-b1f4-fa1f9534a1a1", "slot_ms": 6628}, "message": "CREATE TABLE (3.6k rows, 167.2 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_tsla_2010_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`tsla`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_tsla_2010_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:12.511273Z", "completed_at": "2024-09-03T17:47:12.516453Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:12.516945Z", "completed_at": "2024-09-03T17:47:15.096217Z"}], "thread_id": "Thread-1", "execution_time": 2.586642026901245, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "a88c24ba-dd0d-4907-8b23-d0528d110647", "slot_ms": 4873}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_unh_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`unh`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_unh_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:15.102436Z", "completed_at": "2024-09-03T17:47:15.107330Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:15.107777Z", "completed_at": "2024-09-03T17:47:17.678663Z"}], "thread_id": "Thread-1", "execution_time": 2.578015089035034, "adapter_response": {"_message": "CREATE TABLE (4.1k rows, 194.2 KiB processed)", "code": "CREATE TABLE", "rows_affected": 4142, "bytes_processed": 198816, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "dcb317aa-c277-45bb-a925-9fd0fe70dd04", "slot_ms": 6538}, "message": "CREATE TABLE (4.1k rows, 194.2 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_v_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`v`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_v_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:17.685519Z", "completed_at": "2024-09-03T17:47:17.689410Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:17.690074Z", "completed_at": "2024-09-03T17:47:20.579684Z"}], "thread_id": "Thread-1", "execution_time": 2.8955368995666504, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "9250c980-aae8-46d6-9981-bf5d117c69a4", "slot_ms": 7552}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_wmt_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`wmt`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_wmt_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:20.583715Z", "completed_at": "2024-09-03T17:47:20.587276Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:20.587548Z", "completed_at": "2024-09-03T17:47:24.006947Z"}], "thread_id": "Thread-1", "execution_time": 3.424164056777954, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 381792, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "bb5779ed-da73-487e-bc99-e2d850d5b258", "slot_ms": 7497}, "message": "CREATE TABLE (8.0k rows, 372.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_xom_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`xom`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_xom_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:24.013922Z", "completed_at": "2024-09-03T17:47:24.020783Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:24.021211Z", "completed_at": "2024-09-03T17:47:29.360271Z"}], "thread_id": "Thread-1", "execution_time": 5.34792685508728, "adapter_response": {"_message": "CREATE TABLE (146.1k rows, 35.6 MiB processed)", "code": "CREATE TABLE", "rows_affected": 146100, "bytes_processed": 37312108, "bytes_billed": 37748736, "location": "US", "project_id": "first-project-262802", "job_id": "d2648ea5-f355-46c3-90c2-7d4f10ad893e", "slot_ms": 190411}, "message": "CREATE TABLE (146.1k rows, 35.6 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_calendar", "compiled": true, "compiled_code": "with \n\nbase_calendar as (select * from `first-project-262802`.`stock_analysis`.`base_calendar` )\n\n, adding_month_start_and_end as \n(\n    select\n        *\n        , case when day_of_date = 1 then TRUE else FALSE end as is_month_start\n        , case \n            when ( month_full = 'January' or month_full =  'March' or month_full = 'May' or month_full = 'July'or month_full = 'August' or month_full = 'October' or month_full = 'December') and day_of_date = 31 then TRUE \n            when ( month_full = 'April' or month_full =  'June' or month_full = 'September' or month_full = 'November' ) and day_of_date = 30 then TRUE \n            when month_full = 'February' and ( day_of_date = 28 or day_of_date = 29 ) then TRUE \n            else FALSE \n        end as is_month_end   \n    from base_calendar\n)\n\n, adding_quarter_start_and_end as \n(\n    select\n        *\n        , case \n            when ( month_full = 'January' or month_full =  'April' or month_full = 'July' or month_full = 'October') and is_month_start = TRUE then TRUE\n            else False\n        end as is_quarter_start\n        , case \n            when ( month_full = 'March' or month_full =  'June' or month_full = 'September' or month_full = 'December') and is_month_end = TRUE then TRUE\n            else False\n        end as is_quarter_end    \n    from adding_month_start_and_end\n)\n\n, adding_week_start_and_end as \n(\n    select\n        *\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_week_start\n        , case \n            when day_of_week = 7 then TRUE\n            else False\n        end as is_week_end\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_typical_trading_week_start\n        , case \n            when day_of_week = 5 then TRUE\n            else False\n        end as is_typical_trading_week_end\n    from adding_quarter_start_and_end\n)\n\n, base as (select * from adding_week_start_and_end )\n\n, adding_first_working_day_of_year as \n(\n    select\n        TRUE as is_first_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_year as \n(\n    select\n        TRUE as is_last_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_month as \n(\n    select\n        TRUE as is_first_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_month as \n(\n    select\n        TRUE as is_last_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_week as \n(\n    select\n        TRUE as is_first_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_week as \n(\n    select\n        TRUE as is_last_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date desc) = 1\n)\n\n\nselect \n    base.*\n\n    , case when adding_first_working_day_of_year.is_first_working_day_of_year = TRUE then TRUE else FALSE end as is_first_working_day_of_year\n    , case when adding_last_working_day_of_year.is_last_working_day_of_year = TRUE then TRUE else FALSE end as is_last_working_day_of_year \n    \n    , case when adding_first_working_day_of_month.is_first_working_day_of_month = TRUE then TRUE else FALSE end as is_first_working_day_of_month\n    , case when adding_last_working_day_of_month.is_last_working_day_of_month = TRUE then TRUE else FALSE end as is_last_working_day_of_month\n    \n    , case when adding_first_working_day_of_week.is_first_working_day_of_week = TRUE then TRUE else FALSE end as is_first_working_day_of_week\n    , case when adding_last_working_day_of_week.is_last_working_day_of_week = TRUE then TRUE else FALSE end as is_last_working_day_of_week\n\nfrom base\nleft join adding_first_working_day_of_year using (date)\nleft join adding_last_working_day_of_year using (date)\nleft join adding_first_working_day_of_month using (date)\nleft join adding_last_working_day_of_month using (date)\nleft join adding_first_working_day_of_week using (date)\nleft join adding_last_working_day_of_week using (date)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_calendar`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:29.365668Z", "completed_at": "2024-09-03T17:47:29.369424Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:29.369743Z", "completed_at": "2024-09-03T17:47:32.642547Z"}], "thread_id": "Thread-1", "execution_time": 3.2779150009155273, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 495.2 KiB processed)", "code": "CREATE TABLE", "rows_affected": 8049, "bytes_processed": 507087, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "d9612eb4-032d-4a0a-9084-c19f53331198", "slot_ms": 8345}, "message": "CREATE TABLE (8.0k rows, 495.2 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_symbols_meta", "compiled": true, "compiled_code": "with \n\nsymbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`base_symbols_meta` )\n\nselect \n    symbol\n    , security_name\n    , listing_exchange\n    , market_category\n    , is_ETF\nfrom symbols_meta", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_symbols_meta`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:47:32.649514Z", "completed_at": "2024-09-03T17:47:32.656549Z"}, {"name": "execute", "started_at": "2024-09-03T17:47:32.656986Z", "completed_at": "2024-09-03T17:49:54.950464Z"}], "thread_id": "Thread-1", "execution_time": 142.30258202552795, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "27b65619-b53e-47a4-b11d-c4e034d0c9e5", "slot_ms": 436999}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_aapl_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_aapl_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_aapl_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:49:54.958978Z", "completed_at": "2024-09-03T17:49:54.965658Z"}, {"name": "execute", "started_at": "2024-09-03T17:49:54.966097Z", "completed_at": "2024-09-03T17:50:47.305150Z"}], "thread_id": "Thread-1", "execution_time": 52.3477418422699, "adapter_response": {"_message": "CREATE TABLE (2.9k rows, 37.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 2936, "bytes_processed": 39498436, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "b9a552ed-4f9e-4446-8c4b-b599e740fc94", "slot_ms": 272884}, "message": "CREATE TABLE (2.9k rows, 37.7 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_abbv_2013_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_abbv_2013_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_abbv_2013_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:50:47.310989Z", "completed_at": "2024-09-03T17:50:47.316007Z"}, {"name": "execute", "started_at": "2024-09-03T17:50:47.316327Z", "completed_at": "2024-09-03T17:52:29.782759Z"}], "thread_id": "Thread-1", "execution_time": 102.4729380607605, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "c7fb8e99-5d80-45c2-9ddb-b9d19863b29e", "slot_ms": 344539}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_adbe_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_adbe_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_adbe_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:52:29.790534Z", "completed_at": "2024-09-03T17:52:29.796022Z"}, {"name": "execute", "started_at": "2024-09-03T17:52:29.796503Z", "completed_at": "2024-09-03T17:54:47.075781Z"}], "thread_id": "Thread-1", "execution_time": 137.28635692596436, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "ea678b42-b9ec-4f8b-8cda-701c54bf9c51", "slot_ms": 348019}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_amd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:54:47.083085Z", "completed_at": "2024-09-03T17:54:47.089420Z"}, {"name": "execute", "started_at": "2024-09-03T17:54:47.089811Z", "completed_at": "2024-09-03T17:56:57.598007Z"}], "thread_id": "Thread-1", "execution_time": 130.51642298698425, "adapter_response": {"_message": "CREATE TABLE (6.9k rows, 37.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6869, "bytes_processed": 39687220, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "be688443-3f54-4e4c-9646-15accb487dec", "slot_ms": 362287}, "message": "CREATE TABLE (6.9k rows, 37.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_amzn_1997_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amzn_1997_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amzn_1997_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:56:57.606859Z", "completed_at": "2024-09-03T17:56:57.614894Z"}, {"name": "execute", "started_at": "2024-09-03T17:56:57.615258Z", "completed_at": "2024-09-03T17:58:13.271153Z"}], "thread_id": "Thread-1", "execution_time": 75.66564202308655, "adapter_response": {"_message": "CREATE TABLE (3.8k rows, 37.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3793, "bytes_processed": 39539572, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "cad9a8d3-1e5d-433d-93b5-6f62c6308024", "slot_ms": 252313}, "message": "CREATE TABLE (3.8k rows, 37.7 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_avgo_2009_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_avgo_2009_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_avgo_2009_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T17:58:13.277890Z", "completed_at": "2024-09-03T17:58:13.283119Z"}, {"name": "execute", "started_at": "2024-09-03T17:58:13.283430Z", "completed_at": "2024-09-03T18:00:17.873605Z"}], "thread_id": "Thread-1", "execution_time": 124.59706497192383, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "8d530201-0034-4f90-bd70-7966840b1090", "slot_ms": 406275}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_bac_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_bac_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_bac_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:00:17.881824Z", "completed_at": "2024-09-03T18:00:17.889930Z"}, {"name": "execute", "started_at": "2024-09-03T18:00:17.890401Z", "completed_at": "2024-09-03T18:02:29.804007Z"}], "thread_id": "Thread-1", "execution_time": 131.92345595359802, "adapter_response": {"_message": "CREATE TABLE (7.1k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7126, "bytes_processed": 39699556, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "27c949be-d44d-4e54-a317-feba1353fae6", "slot_ms": 444783}, "message": "CREATE TABLE (7.1k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_brk-b_1996_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_brk-b_1996_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_brk-b_1996_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:02:29.811517Z", "completed_at": "2024-09-03T18:02:29.818079Z"}, {"name": "execute", "started_at": "2024-09-03T18:02:29.818468Z", "completed_at": "2024-09-03T18:05:14.940626Z"}], "thread_id": "Thread-1", "execution_time": 165.13051009178162, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "1fe3bbca-ce74-4ffb-8535-98e9b78963e4", "slot_ms": 522765}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_cost_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cost_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cost_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:05:14.947250Z", "completed_at": "2024-09-03T18:05:14.952757Z"}, {"name": "execute", "started_at": "2024-09-03T18:05:14.953094Z", "completed_at": "2024-09-03T18:06:43.618865Z"}], "thread_id": "Thread-1", "execution_time": 88.6726450920105, "adapter_response": {"_message": "CREATE TABLE (5.1k rows, 37.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5083, "bytes_processed": 39601492, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "e924894f-771a-47fe-a5a7-e0f4e57b181d", "slot_ms": 340295}, "message": "CREATE TABLE (5.1k rows, 37.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_crm_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_crm_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_crm_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:06:43.624277Z", "completed_at": "2024-09-03T18:06:43.627695Z"}, {"name": "execute", "started_at": "2024-09-03T18:06:43.628083Z", "completed_at": "2024-09-03T18:09:01.205912Z"}], "thread_id": "Thread-1", "execution_time": 137.58298921585083, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "618c82cf-62a1-422e-87d5-f006fb2116aa", "slot_ms": 654886}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_cvx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cvx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cvx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:09:01.214574Z", "completed_at": "2024-09-03T18:09:01.226378Z"}, {"name": "execute", "started_at": "2024-09-03T18:09:01.226926Z", "completed_at": "2024-09-03T18:10:11.475096Z"}], "thread_id": "Thread-1", "execution_time": 70.26185488700867, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 37.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 39599572, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "69b138de-deec-4913-99e5-2d57dd706dc8", "slot_ms": 326057}, "message": "CREATE TABLE (5.0k rows, 37.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_goog_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_goog_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_goog_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:10:11.480178Z", "completed_at": "2024-09-03T18:10:11.485417Z"}, {"name": "execute", "started_at": "2024-09-03T18:10:11.485682Z", "completed_at": "2024-09-03T18:11:24.767759Z"}], "thread_id": "Thread-1", "execution_time": 73.28850317001343, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 37.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 39599572, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "e9ddbb4c-94a1-44c6-bbed-4e109a037cdb", "slot_ms": 276080}, "message": "CREATE TABLE (5.0k rows, 37.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_googl_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_googl_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_googl_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:11:25.032093Z", "completed_at": "2024-09-03T18:11:25.041079Z"}, {"name": "execute", "started_at": "2024-09-03T18:11:25.041800Z", "completed_at": "2024-09-03T18:13:29.199773Z"}], "thread_id": "Thread-1", "execution_time": 124.16947102546692, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "4b98c41d-3f8e-40fa-b491-2ec5e098673f", "slot_ms": 468550}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_hd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:13:29.206476Z", "completed_at": "2024-09-03T18:13:29.212545Z"}, {"name": "execute", "started_at": "2024-09-03T18:13:29.212997Z", "completed_at": "2024-09-03T18:16:06.503060Z"}], "thread_id": "Thread-1", "execution_time": 157.29798913002014, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "1e500b34-da99-413e-afc8-a0d2df0b4524", "slot_ms": 477742}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_jnj_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jnj_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jnj_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:16:06.511024Z", "completed_at": "2024-09-03T18:16:06.517604Z"}, {"name": "execute", "started_at": "2024-09-03T18:16:06.517987Z", "completed_at": "2024-09-03T18:18:44.629193Z"}], "thread_id": "Thread-1", "execution_time": 158.11978387832642, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "bff5bc6a-031d-4060-9fef-e6749b1d4acf", "slot_ms": 390639}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_jpm_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jpm_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jpm_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:18:44.636486Z", "completed_at": "2024-09-03T18:18:44.644097Z"}, {"name": "execute", "started_at": "2024-09-03T18:18:44.644430Z", "completed_at": "2024-09-03T18:21:17.492918Z"}], "thread_id": "Thread-1", "execution_time": 152.85748386383057, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "eb3159db-9059-4d27-be1c-e993e71b874b", "slot_ms": 425450}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_ko_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ko_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ko_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:21:17.499669Z", "completed_at": "2024-09-03T18:21:17.505721Z"}, {"name": "execute", "started_at": "2024-09-03T18:21:17.506083Z", "completed_at": "2024-09-03T18:24:01.817359Z"}], "thread_id": "Thread-1", "execution_time": 164.3192172050476, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "a764ead7-9bdb-4ed0-97c2-3723c1b42d2f", "slot_ms": 643296}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_lly_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_lly_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_lly_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:24:01.827345Z", "completed_at": "2024-09-03T18:24:01.836266Z"}, {"name": "execute", "started_at": "2024-09-03T18:24:01.836595Z", "completed_at": "2024-09-03T18:25:17.427707Z"}], "thread_id": "Thread-1", "execution_time": 75.60173296928406, "adapter_response": {"_message": "CREATE TABLE (4.6k rows, 37.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 4598, "bytes_processed": 39578212, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "e93d386f-04b9-4bb5-8a6c-09bb44db0365", "slot_ms": 248819}, "message": "CREATE TABLE (4.6k rows, 37.7 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_ma_2006_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ma_2006_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ma_2006_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:25:17.435023Z", "completed_at": "2024-09-03T18:25:17.441651Z"}, {"name": "execute", "started_at": "2024-09-03T18:25:17.442033Z", "completed_at": "2024-09-03T18:26:14.160716Z"}], "thread_id": "Thread-1", "execution_time": 56.72691798210144, "adapter_response": {"_message": "CREATE TABLE (3.1k rows, 37.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3091, "bytes_processed": 39505876, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "82f6de96-6aae-491e-9258-cc3e6c14086c", "slot_ms": 248002}, "message": "CREATE TABLE (3.1k rows, 37.7 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_meta_2012_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_meta_2012_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_meta_2012_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:26:14.167073Z", "completed_at": "2024-09-03T18:26:14.175264Z"}, {"name": "execute", "started_at": "2024-09-03T18:26:14.175735Z", "completed_at": "2024-09-03T18:28:35.481415Z"}], "thread_id": "Thread-1", "execution_time": 141.31576013565063, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "917a0e44-126b-4123-9d75-6995b43560cf", "slot_ms": 340124}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_mrk_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_mrk_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_mrk_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:28:35.487980Z", "completed_at": "2024-09-03T18:28:35.494641Z"}, {"name": "execute", "started_at": "2024-09-03T18:28:35.495087Z", "completed_at": "2024-09-03T18:30:35.120457Z"}], "thread_id": "Thread-1", "execution_time": 119.63397192955017, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "22eced9f-4de3-4827-9794-7c3233a9d3fc", "slot_ms": 417919}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_msft_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_msft_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_msft_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:30:35.126648Z", "completed_at": "2024-09-03T18:30:35.129939Z"}, {"name": "execute", "started_at": "2024-09-03T18:30:35.130142Z", "completed_at": "2024-09-03T18:32:32.274208Z"}], "thread_id": "Thread-1", "execution_time": 117.14856696128845, "adapter_response": {"_message": "CREATE TABLE (5.6k rows, 37.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5607, "bytes_processed": 39626644, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "3614ecad-bbcc-4c5d-81d3-b492696944f6", "slot_ms": 436341}, "message": "CREATE TABLE (5.6k rows, 37.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_nflx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nflx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nflx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:32:32.283395Z", "completed_at": "2024-09-03T18:32:32.291519Z"}, {"name": "execute", "started_at": "2024-09-03T18:32:32.291918Z", "completed_at": "2024-09-03T18:34:37.609441Z"}], "thread_id": "Thread-1", "execution_time": 125.3274130821228, "adapter_response": {"_message": "CREATE TABLE (6.4k rows, 37.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6444, "bytes_processed": 39666820, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "1d9307fc-df84-4931-9476-3a62793b0034", "slot_ms": 606173}, "message": "CREATE TABLE (6.4k rows, 37.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_nvda_1999_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nvda_1999_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nvda_1999_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:34:37.617908Z", "completed_at": "2024-09-03T18:34:37.624885Z"}, {"name": "execute", "started_at": "2024-09-03T18:34:37.625264Z", "completed_at": "2024-09-03T18:36:50.071974Z"}], "thread_id": "Thread-1", "execution_time": 132.4554159641266, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "e4f896f6-81db-4acd-8838-ef0c4a186369", "slot_ms": 346006}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_pep_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pep_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pep_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:36:50.080461Z", "completed_at": "2024-09-03T18:36:50.088087Z"}, {"name": "execute", "started_at": "2024-09-03T18:36:50.088577Z", "completed_at": "2024-09-03T18:39:12.052025Z"}], "thread_id": "Thread-1", "execution_time": 141.97285389900208, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "b6435e33-9ba8-44b5-bade-64b04982a8cc", "slot_ms": 378847}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_pg_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pg_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pg_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:39:12.060689Z", "completed_at": "2024-09-03T18:39:12.068300Z"}, {"name": "execute", "started_at": "2024-09-03T18:39:12.068665Z", "completed_at": "2024-09-03T18:39:36.666285Z"}], "thread_id": "Thread-1", "execution_time": 24.606961965560913, "adapter_response": {"_message": "CREATE TABLE (1.2k rows, 37.6 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1183, "bytes_processed": 39414292, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "3f8c35ae-adaf-4558-8dcb-aef71d710b03", "slot_ms": 176243}, "message": "CREATE TABLE (1.2k rows, 37.6 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spus_2019_2024", "compiled": true, "compiled_code": "-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- --   DEPRACATED   -- -- -- -- --\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\n\nwith \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spus_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spus_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:39:36.673892Z", "completed_at": "2024-09-03T18:39:36.681426Z"}, {"name": "execute", "started_at": "2024-09-03T18:39:36.682025Z", "completed_at": "2024-09-03T18:42:11.818549Z"}], "thread_id": "Thread-1", "execution_time": 155.14620685577393, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "fb6a1f62-1e62-44cb-9c93-25a4ec8b9b47", "slot_ms": 405016}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spy_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spy_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spy_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:42:11.828175Z", "completed_at": "2024-09-03T18:42:11.835264Z"}, {"name": "execute", "started_at": "2024-09-03T18:42:11.835579Z", "completed_at": "2024-09-03T18:43:05.567733Z"}], "thread_id": "Thread-1", "execution_time": 53.74084711074829, "adapter_response": {"_message": "CREATE TABLE (2.5k rows, 37.6 MiB processed)", "code": "CREATE TABLE", "rows_affected": 2517, "bytes_processed": 39478324, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "78533ab3-2696-4050-8952-526418d33ae3", "slot_ms": 306427}, "message": "CREATE TABLE (2.5k rows, 37.6 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spy_2014_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spy_2014_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spy_2014_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:43:05.573605Z", "completed_at": "2024-09-03T18:43:05.576986Z"}, {"name": "execute", "started_at": "2024-09-03T18:43:05.577190Z", "completed_at": "2024-09-03T18:45:36.045354Z"}], "thread_id": "Thread-1", "execution_time": 150.47247004508972, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "51a196f5-b5ad-415d-9056-c7b11388ee35", "slot_ms": 611740}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_tmo_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tmo_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tmo_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:45:36.053424Z", "completed_at": "2024-09-03T18:45:36.060006Z"}, {"name": "execute", "started_at": "2024-09-03T18:45:36.060463Z", "completed_at": "2024-09-03T18:46:53.535600Z"}], "thread_id": "Thread-1", "execution_time": 77.48361897468567, "adapter_response": {"_message": "CREATE TABLE (3.6k rows, 37.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3568, "bytes_processed": 39528772, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "3475e38d-aec2-440c-a3e8-950ddf5d571c", "slot_ms": 380636}, "message": "CREATE TABLE (3.6k rows, 37.7 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_tsla_2010_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tsla_2010_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tsla_2010_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:46:53.543729Z", "completed_at": "2024-09-03T18:46:53.550271Z"}, {"name": "execute", "started_at": "2024-09-03T18:46:53.550619Z", "completed_at": "2024-09-03T18:48:52.823217Z"}], "thread_id": "Thread-1", "execution_time": 119.28081202507019, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "e58a559d-b501-4469-812e-4e66550fbfcf", "slot_ms": 490262}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_unh_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_unh_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_unh_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:48:52.829921Z", "completed_at": "2024-09-03T18:48:52.836888Z"}, {"name": "execute", "started_at": "2024-09-03T18:48:52.837149Z", "completed_at": "2024-09-03T18:50:16.500161Z"}], "thread_id": "Thread-1", "execution_time": 83.67133498191833, "adapter_response": {"_message": "CREATE TABLE (4.1k rows, 37.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 4142, "bytes_processed": 39556324, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "9a314393-28ee-45a5-a157-e5101ad67554", "slot_ms": 346086}, "message": "CREATE TABLE (4.1k rows, 37.7 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_v_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_v_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_v_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:50:16.506409Z", "completed_at": "2024-09-03T18:50:16.511082Z"}, {"name": "execute", "started_at": "2024-09-03T18:50:16.511371Z", "completed_at": "2024-09-03T18:52:38.456146Z"}], "thread_id": "Thread-1", "execution_time": 141.95075583457947, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "e254cbfe-3759-42d4-805b-9ecc64b544c3", "slot_ms": 461284}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_wmt_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_wmt_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_wmt_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:52:38.462446Z", "completed_at": "2024-09-03T18:52:38.469036Z"}, {"name": "execute", "started_at": "2024-09-03T18:52:38.469506Z", "completed_at": "2024-09-03T18:54:50.877891Z"}], "thread_id": "Thread-1", "execution_time": 132.41676688194275, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 39739300, "bytes_billed": 39845888, "location": "US", "project_id": "first-project-262802", "job_id": "4991d7b4-756e-4560-9284-6eab44ab73e7", "slot_ms": 490316}, "message": "CREATE TABLE (8.0k rows, 37.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_xom_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_xom_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_xom_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:54:50.884935Z", "completed_at": "2024-09-03T18:54:50.894183Z"}, {"name": "execute", "started_at": "2024-09-03T18:54:50.894686Z", "completed_at": "2024-09-03T18:54:54.177941Z"}], "thread_id": "Thread-1", "execution_time": 3.2941460609436035, "adapter_response": {"_message": "CREATE TABLE (9.1k rows, 3.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 9137, "bytes_processed": 3556605, "bytes_billed": 20971520, "location": "US", "project_id": "first-project-262802", "job_id": "acee5d8e-355d-4dae-9c46-9dab46a913d2", "slot_ms": 7575}, "message": "CREATE TABLE (9.1k rows, 3.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.int_stock_analysis", "compiled": true, "compiled_code": "with\n\nspy as ( select * from `first-project-262802`.`stock_analysis`.`stg_spy_1993_2024` )\n\n, spus as ( select * from `first-project-262802`.`stock_analysis`.`stg_spus_2019_2024` )\n\nselect * , 'SPY' as symbol from spy\nunion all\nselect * , 'SPUS' as symbol from spus", "relation_name": "`first-project-262802`.`stock_analysis`.`int_stock_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-03T18:54:54.185550Z", "completed_at": "2024-09-03T18:54:54.191897Z"}, {"name": "execute", "started_at": "2024-09-03T18:54:54.192646Z", "completed_at": "2024-09-03T18:54:57.222251Z"}], "thread_id": "Thread-1", "execution_time": 3.0382912158966064, "adapter_response": {"_message": "CREATE TABLE (9.1k rows, 3.9 MiB processed)", "code": "CREATE TABLE", "rows_affected": 9137, "bytes_processed": 4110560, "bytes_billed": 20971520, "location": "US", "project_id": "first-project-262802", "job_id": "bc37ea63-d9c8-428a-80bf-31225f8742a3", "slot_ms": 5530}, "message": "CREATE TABLE (9.1k rows, 3.9 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stock_analysis", "compiled": true, "compiled_code": "with\n\nstock_analysis as ( select * from `first-project-262802`.`stock_analysis`.`int_stock_analysis` )\n\n, symbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_symbols_meta` )\n\nselect\n    *\nfrom stock_analysis\nleft join symbols_meta using (symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`stock_analysis`"}], "elapsed_time": 4164.334217071533, "args": {"require_resource_names_without_spaces": false, "introspect": true, "profiles_dir": "/Users/ahmed/.dbt", "macro_debugging": false, "quiet": false, "log_format": "default", "print": true, "select": [], "strict_mode": false, "log_level": "info", "exclude": [], "send_anonymous_usage_stats": true, "static_parser": true, "vars": {}, "indirect_selection": "eager", "log_level_file": "debug", "log_path": "/Users/ahmed/Desktop/dbt/stock_analysis/logs", "use_colors": true, "warn_error_options": {"include": [], "exclude": []}, "write_json": true, "use_colors_file": true, "version_check": true, "invocation_command": "dbt run", "log_format_file": "debug", "cache_selected_only": false, "empty": false, "enable_legacy_logger": false, "populate_cache": true, "partial_parse": true, "source_freshness_run_project_hooks": false, "require_explicit_package_overrides_for_builtin_materializations": true, "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "favor_state": false, "defer": false, "which": "run", "printer_width": 80, "show_resource_report": false, "project_dir": "/Users/ahmed/Desktop/dbt/stock_analysis"}}