{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-09-15T16:16:32.499299Z", "invocation_id": "2902b947-259c-41a5-a268-8fa0306b1ef2", "env": {}}, "results": [{"status": "error", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.120377Z", "completed_at": "2024-09-15T16:11:50.324209Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.759441Z", "completed_at": "2024-09-15T16:11:54.261032Z"}], "thread_id": "Thread-31", "execution_time": 4.244570970535278, "adapter_response": {}, "message": "Database Error in model base_spy_2014_2024 (models/1_base/base_spy_2014_2024.sql)\n  Unrecognized name: adj_close at [16:5]\n  compiled Code at target/run/stock_analysis/models/1_base/base_spy_2014_2024.sql", "failures": null, "unique_id": "model.stock_analysis.base_spy_2014_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spy_2014_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spy_2014_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.077462Z", "completed_at": "2024-09-15T16:11:50.124305Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.327727Z", "completed_at": "2024-09-15T16:11:54.786329Z"}], "thread_id": "Thread-12", "execution_time": 4.738996982574463, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "95ce08f6-1b93-471b-8607-65d7dfb5e148", "slot_ms": 12317}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_cvx_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`cvx`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_cvx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.049582Z", "completed_at": "2024-09-15T16:11:50.065398Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.105800Z", "completed_at": "2024-09-15T16:11:54.785726Z"}], "thread_id": "Thread-2", "execution_time": 4.761571884155273, "adapter_response": {"_message": "CREATE TABLE (2.9k rows, 160.6 KiB processed)", "code": "CREATE TABLE", "rows_affected": 2936, "bytes_processed": 164416, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "891338a3-e0a0-4cd9-8db1-3ebf6a34d1f5", "slot_ms": 7382}, "message": "CREATE TABLE (2.9k rows, 160.6 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_abbv_2013_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`abbv`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_abbv_2013_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.060543Z", "completed_at": "2024-09-15T16:11:50.097329Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.187129Z", "completed_at": "2024-09-15T16:11:54.789246Z"}], "thread_id": "Thread-4", "execution_time": 4.756666898727417, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "e682c344-6ffa-48b2-a95f-367b21c7aac2", "slot_ms": 12162}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_amd_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`amd`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_amd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.089083Z", "completed_at": "2024-09-15T16:11:50.186633Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.364947Z", "completed_at": "2024-09-15T16:11:55.004967Z"}], "thread_id": "Thread-14", "execution_time": 4.957068681716919, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 275.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 282408, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "6da6e3f9-45f6-4185-9f4b-bdb162d728f4", "slot_ms": 11266}, "message": "CREATE TABLE (5.0k rows, 275.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_googl_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`googl`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_googl_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.055674Z", "completed_at": "2024-09-15T16:11:50.071497Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.117340Z", "completed_at": "2024-09-15T16:11:55.005762Z"}], "thread_id": "Thread-3", "execution_time": 4.978752136230469, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "8e928764-09b3-408b-be9e-916256caac42", "slot_ms": 12673}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_adbe_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`adbe`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_adbe_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.074441Z", "completed_at": "2024-09-15T16:11:50.123859Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.324451Z", "completed_at": "2024-09-15T16:11:55.003673Z"}], "thread_id": "Thread-10", "execution_time": 4.956914901733398, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "e9f2a8ff-a52e-4541-b2e4-9a00f3f911a0", "slot_ms": 10582}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_cost_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`cost`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_cost_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.067779Z", "completed_at": "2024-09-15T16:11:50.117119Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.256628Z", "completed_at": "2024-09-15T16:11:55.162881Z"}], "thread_id": "Thread-7", "execution_time": 5.124978303909302, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "85b5634e-c080-4ce1-80e8-8929f783076b", "slot_ms": 9134}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_bac_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`bac`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_bac_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.098991Z", "completed_at": "2024-09-15T16:11:50.191494Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.437322Z", "completed_at": "2024-09-15T16:11:55.310483Z"}], "thread_id": "Thread-20", "execution_time": 5.259487867355347, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "32df4110-661e-455d-866c-ffd0267adff0", "slot_ms": 10650}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_lly_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`lly`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_lly_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.062575Z", "completed_at": "2024-09-15T16:11:50.101941Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.190047Z", "completed_at": "2024-09-15T16:11:55.393545Z"}], "thread_id": "Thread-5", "execution_time": 5.360005855560303, "adapter_response": {"_message": "CREATE TABLE (6.9k rows, 375.6 KiB processed)", "code": "CREATE TABLE", "rows_affected": 6869, "bytes_processed": 384664, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "5ebdcfcc-c557-46e1-86f7-450764fff2e3", "slot_ms": 11063}, "message": "CREATE TABLE (6.9k rows, 375.6 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_amzn_1997_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`amzn`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_amzn_1997_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.102116Z", "completed_at": "2024-09-15T16:11:50.192083Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.498121Z", "completed_at": "2024-09-15T16:11:55.398626Z"}], "thread_id": "Thread-22", "execution_time": 5.345125913619995, "adapter_response": {"_message": "CREATE TABLE (3.1k rows, 169.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 3091, "bytes_processed": 173096, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "ca7dc5ba-51e4-42d5-a483-5481e365e743", "slot_ms": 10247}, "message": "CREATE TABLE (3.1k rows, 169.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_meta_2012_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`meta`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_meta_2012_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.121976Z", "completed_at": "2024-09-15T16:11:50.325983Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.762031Z", "completed_at": "2024-09-15T16:11:55.418252Z"}], "thread_id": "Thread-32", "execution_time": 5.359648942947388, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 0 processed)", "code": "CREATE TABLE", "rows_affected": 8049, "bytes_processed": 0, "bytes_billed": 0, "location": "US", "project_id": "first-project-262802", "job_id": "c829662a-066c-495f-a526-1acc6da76ae1", "slot_ms": 8021}, "message": "CREATE TABLE (8.0k rows, 0 processed)", "failures": null, "unique_id": "model.stock_analysis.base_symbols_meta", "compiled": true, "compiled_code": "select \n    'Nasdaq Traded' as is_nasdaq_traded\n    , 'Symbol' as symbol\n    , 'Security Name' as security_name\n    , 'Listing Exchange' as listing_exchange\n    , 'Market Category' as market_category\n    , 'ETF' as is_ETF\n    , 'Round Lot Size' as round_lot_size\n    , 'Test Issue' as is_test_issue\n    , 'Financial Status' as financial_status\n    , 'CQS Symbol' as cqs_symbol\n    , 'NASDAQ Symbol' as nasdaq_symbol\n    , 'NextShares' as nextshares\nfrom `first-project-262802`.`stock`.`symbols_valid_meta`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_symbols_meta`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.110379Z", "completed_at": "2024-09-15T16:11:50.256156Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.567879Z", "completed_at": "2024-09-15T16:11:55.422449Z"}], "thread_id": "Thread-26", "execution_time": 5.367681980133057, "adapter_response": {"_message": "CREATE TABLE (6.4k rows, 352.4 KiB processed)", "code": "CREATE TABLE", "rows_affected": 6444, "bytes_processed": 360864, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "4dbefdba-ffb0-40bd-9eb9-31a1fb13c7ba", "slot_ms": 11165}, "message": "CREATE TABLE (6.4k rows, 352.4 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_nvda_1999_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`nvda`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_nvda_1999_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.090597Z", "completed_at": "2024-09-15T16:11:50.186849Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.368686Z", "completed_at": "2024-09-15T16:11:55.426280Z"}], "thread_id": "Thread-15", "execution_time": 5.378178834915161, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "9775fcff-eba8-4527-bd0e-d3d465698397", "slot_ms": 9584}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_hd_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`hd`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_hd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.069971Z", "completed_at": "2024-09-15T16:11:50.121806Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.319892Z", "completed_at": "2024-09-15T16:11:55.431898Z"}], "thread_id": "Thread-8", "execution_time": 5.39246678352356, "adapter_response": {"_message": "CREATE TABLE (7.1k rows, 389.7 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7126, "bytes_processed": 399056, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "c8547bda-7cd6-48f6-86b2-fbad7cace83c", "slot_ms": 6696}, "message": "CREATE TABLE (7.1k rows, 389.7 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_brk-b_1996_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`brk-b`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_brk-b_1996_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.115075Z", "completed_at": "2024-09-15T16:11:50.258123Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.573067Z", "completed_at": "2024-09-15T16:11:55.433794Z"}], "thread_id": "Thread-29", "execution_time": 5.376072883605957, "adapter_response": {"_message": "CREATE TABLE (1.2k rows, 64.7 KiB processed)", "code": "CREATE TABLE", "rows_affected": 1183, "bytes_processed": 66248, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "40f18248-b9c4-4c18-99a1-9d00198c0fdb", "slot_ms": 7734}, "message": "CREATE TABLE (1.2k rows, 64.7 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_spus_2019_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spus_2019_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spus_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.092728Z", "completed_at": "2024-09-15T16:11:50.188847Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.370230Z", "completed_at": "2024-09-15T16:11:55.442839Z"}], "thread_id": "Thread-16", "execution_time": 5.394235849380493, "adapter_response": {"_message": "CREATE TABLE (1.3k rows, 70.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 1294, "bytes_processed": 72464, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "bdaf219b-b5e8-4bca-885c-e2beea371abb", "slot_ms": 7613}, "message": "CREATE TABLE (1.3k rows, 70.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_hlal_2019_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`hlal`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_hlal_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.118910Z", "completed_at": "2024-09-15T16:11:50.321731Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.697667Z", "completed_at": "2024-09-15T16:11:55.518386Z"}], "thread_id": "Thread-30", "execution_time": 5.460221290588379, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "bd27e17a-faea-4159-b1f7-0a1bb82e219d", "slot_ms": 11243}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_spy_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spy_1993_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spy_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.075991Z", "completed_at": "2024-09-15T16:11:50.124089Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.326174Z", "completed_at": "2024-09-15T16:11:55.655535Z"}], "thread_id": "Thread-11", "execution_time": 5.60847282409668, "adapter_response": {"_message": "CREATE TABLE (5.1k rows, 278.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5083, "bytes_processed": 284648, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "5c01c1c7-2f6e-4c0b-9cd6-f7fbf785c747", "slot_ms": 7728}, "message": "CREATE TABLE (5.1k rows, 278.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_crm_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`crm`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_crm_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.097533Z", "completed_at": "2024-09-15T16:11:50.189839Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.435658Z", "completed_at": "2024-09-15T16:11:55.664436Z"}], "thread_id": "Thread-19", "execution_time": 5.613960027694702, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "9d099eb5-e3cc-4a09-a166-ffcb9f4d431e", "slot_ms": 10036}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_ko_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`ko`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_ko_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.065741Z", "completed_at": "2024-09-15T16:11:50.111871Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.253580Z", "completed_at": "2024-09-15T16:11:55.678394Z"}], "thread_id": "Thread-6", "execution_time": 5.641807794570923, "adapter_response": {"_message": "CREATE TABLE (3.8k rows, 207.4 KiB processed)", "code": "CREATE TABLE", "rows_affected": 3793, "bytes_processed": 212408, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "45902781-08c2-4f91-ba9f-24759bea67c2", "slot_ms": 8727}, "message": "CREATE TABLE (3.8k rows, 207.4 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_avgo_2009_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`avgo`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_avgo_2009_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.100460Z", "completed_at": "2024-09-15T16:11:50.191699Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.438929Z", "completed_at": "2024-09-15T16:11:55.725831Z"}], "thread_id": "Thread-21", "execution_time": 5.672652006149292, "adapter_response": {"_message": "CREATE TABLE (4.6k rows, 251.5 KiB processed)", "code": "CREATE TABLE", "rows_affected": 4598, "bytes_processed": 257488, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "cafdb116-6343-4e2c-92b3-add1746d2cef", "slot_ms": 7637}, "message": "CREATE TABLE (4.6k rows, 251.5 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_ma_2006_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`ma`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_ma_2006_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.041023Z", "completed_at": "2024-09-15T16:11:50.060014Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.080462Z", "completed_at": "2024-09-15T16:11:55.766000Z"}], "thread_id": "Thread-1", "execution_time": 5.744693756103516, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "37cb315a-0508-4edd-9ed2-7c6ccd0afeaf", "slot_ms": 8126}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_aapl_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`aapl`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_aapl_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.112073Z", "completed_at": "2024-09-15T16:11:50.256441Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.570741Z", "completed_at": "2024-09-15T16:11:55.781561Z"}], "thread_id": "Thread-27", "execution_time": 5.726250886917114, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "b3c93fe4-baa1-4b2f-8790-52ac3c52b883", "slot_ms": 8467}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_pep_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`pep`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_pep_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.079003Z", "completed_at": "2024-09-15T16:11:50.183311Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.329173Z", "completed_at": "2024-09-15T16:11:56.008274Z"}], "thread_id": "Thread-13", "execution_time": 5.960705041885376, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 275.8 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 282408, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "ce04099b-bdc0-4755-a3e0-ecee98f0906a", "slot_ms": 10242}, "message": "CREATE TABLE (5.0k rows, 275.8 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_goog_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`goog`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_goog_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.103547Z", "completed_at": "2024-09-15T16:11:50.192282Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.502518Z", "completed_at": "2024-09-15T16:11:56.012302Z"}], "thread_id": "Thread-23", "execution_time": 5.958557844161987, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "77297bec-a45d-46b9-863e-f102b10750e5", "slot_ms": 5664}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_mrk_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`mrk`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_mrk_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.107252Z", "completed_at": "2024-09-15T16:11:50.250577Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.504334Z", "completed_at": "2024-09-15T16:11:56.251161Z"}], "thread_id": "Thread-24", "execution_time": 6.1973090171813965, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "bd6326c7-469d-465b-9ff2-f88ab168432b", "slot_ms": 9786}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_msft_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`msft`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_msft_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.113607Z", "completed_at": "2024-09-15T16:11:50.258389Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.635894Z", "completed_at": "2024-09-15T16:11:56.254451Z"}], "thread_id": "Thread-28", "execution_time": 6.197031259536743, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "78cb2bcd-0b40-4f81-8da9-fd110a3701cc", "slot_ms": 10320}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_pg_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`pg`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_pg_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.108839Z", "completed_at": "2024-09-15T16:11:50.255762Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.563296Z", "completed_at": "2024-09-15T16:11:56.268342Z"}], "thread_id": "Thread-25", "execution_time": 6.213972091674805, "adapter_response": {"_message": "CREATE TABLE (5.6k rows, 306.6 KiB processed)", "code": "CREATE TABLE", "rows_affected": 5607, "bytes_processed": 313992, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "76203470-65fc-4011-b2c7-7a70bae4d60f", "slot_ms": 9979}, "message": "CREATE TABLE (5.6k rows, 306.6 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_nflx_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`nflx`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_nflx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.095785Z", "completed_at": "2024-09-15T16:11:50.189306Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.434017Z", "completed_at": "2024-09-15T16:11:56.305720Z"}], "thread_id": "Thread-18", "execution_time": 6.256514072418213, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "73184ee6-3220-4ae8-a5e0-c44f8fc6d8d2", "slot_ms": 9907}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_jpm_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`jpm`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_jpm_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.094253Z", "completed_at": "2024-09-15T16:11:50.189110Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.371732Z", "completed_at": "2024-09-15T16:11:56.307830Z"}], "thread_id": "Thread-17", "execution_time": 6.259013891220093, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "a4c10d0b-d9f1-450f-a693-a13e1a44a5aa", "slot_ms": 8291}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_jnj_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`jnj`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_jnj_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:50.072185Z", "completed_at": "2024-09-15T16:11:50.123642Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:50.322391Z", "completed_at": "2024-09-15T16:11:56.913257Z"}], "thread_id": "Thread-9", "execution_time": 6.872976779937744, "adapter_response": {"_message": "CREATE TABLE (146.1k rows, 29.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 146100, "bytes_processed": 31278432, "bytes_billed": 31457280, "location": "US", "project_id": "first-project-262802", "job_id": "ab6b6f43-2673-48aa-9872-03e845984be6", "slot_ms": 12979}, "message": "CREATE TABLE (146.1k rows, 29.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_calendar", "compiled": true, "compiled_code": "select \n    is_workday\n    , is_holiday\n    , is_holiday_leave\n    , a_date\n    , a_date as date\n    , extract(year from a_date) as year_of_date\n    , extract(month from a_date) as month_of_date\n    , extract(day from a_date) as day_of_date\n    , day_full\n    , day_full_capital_case\n    , day_full_lower_case\n    , day_abbrev\n    , is_weekday\n    , is_weekday_by_regex\n    , day_of_week\n    , day_of_month\n    , day_of_year\n    , week_of_month\n    , format_date('%W', a_date) as week_number\n    , trim(month_full) as month_full\n    , lower(trim(month_full)) as month_full_lower_case\n    , month_abbrev\n    , month_number\n    , quarter\n    , year_short\n    , year_full\n    , fiscal_quarter\n    , fiscal_year\n    , fiscal_year_full\n    , tomorrow\n    , one_week_later\n    , one_month_later\n    , three_months_later\n    , one_year_later\nfrom `first-project-262802`.`stock`.`400_years_of_generated_dates_and_holidays`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_calendar`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:54.306447Z", "completed_at": "2024-09-15T16:11:54.309553Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:54.309813Z", "completed_at": "2024-09-15T16:11:57.548183Z"}], "thread_id": "Thread-31", "execution_time": 3.2425408363342285, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "243c8bf2-34ff-4121-9ac1-80c5376b76d5", "slot_ms": 8755}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_tmo_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`tmo`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_tmo_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:55.017872Z", "completed_at": "2024-09-15T16:11:55.021677Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:55.021974Z", "completed_at": "2024-09-15T16:11:57.741012Z"}], "thread_id": "Thread-3", "execution_time": 2.7260751724243164, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "45b6e179-952b-4d48-849d-4e26a2fc73bf", "slot_ms": 6165}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_xom_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`xom`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_xom_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:54.796472Z", "completed_at": "2024-09-15T16:11:54.807570Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:54.812085Z", "completed_at": "2024-09-15T16:11:57.930800Z"}], "thread_id": "Thread-12", "execution_time": 3.1361348628997803, "adapter_response": {"_message": "CREATE TABLE (3.6k rows, 195.1 KiB processed)", "code": "CREATE TABLE", "rows_affected": 3568, "bytes_processed": 199808, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "b72a5500-cbe2-496e-84b3-7dba54421322", "slot_ms": 7864}, "message": "CREATE TABLE (3.6k rows, 195.1 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_tsla_2010_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`tsla`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_tsla_2010_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:54.801471Z", "completed_at": "2024-09-15T16:11:54.805035Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:54.808161Z", "completed_at": "2024-09-15T16:11:57.979587Z"}], "thread_id": "Thread-4", "execution_time": 3.1842689514160156, "adapter_response": {"_message": "CREATE TABLE (4.1k rows, 226.5 KiB processed)", "code": "CREATE TABLE", "rows_affected": 4142, "bytes_processed": 231952, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "b7305286-3a74-4bbc-b8e0-3a2bc25dbf00", "slot_ms": 9802}, "message": "CREATE TABLE (4.1k rows, 226.5 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_v_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`v`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_v_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:55.015366Z", "completed_at": "2024-09-15T16:11:55.019751Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:55.019986Z", "completed_at": "2024-09-15T16:11:57.981799Z"}], "thread_id": "Thread-14", "execution_time": 2.9676108360290527, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "a77b7052-9b03-4218-8597-763f8fc15af9", "slot_ms": 9302}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_wmt_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`wmt`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_wmt_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:54.798963Z", "completed_at": "2024-09-15T16:11:54.804778Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:54.805390Z", "completed_at": "2024-09-15T16:11:57.983181Z"}], "thread_id": "Thread-2", "execution_time": 3.1880428791046143, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 445424, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "cd0ee6a3-f1cf-4d73-9249-73e93f23db27", "slot_ms": 6989}, "message": "CREATE TABLE (8.0k rows, 435.0 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.base_unh_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`unh`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_unh_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:55.427332Z", "completed_at": "2024-09-15T16:11:55.438724Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:55.439194Z", "completed_at": "2024-09-15T16:11:58.562750Z"}], "thread_id": "Thread-10", "execution_time": 3.1418559551239014, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 495.2 KiB processed)", "code": "CREATE TABLE", "rows_affected": 8049, "bytes_processed": 507087, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "586f4a53-956e-46a3-92a9-6640bd1ad380", "slot_ms": 8261}, "message": "CREATE TABLE (8.0k rows, 495.2 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_symbols_meta", "compiled": true, "compiled_code": "with \n\nsymbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`base_symbols_meta` )\n\nselect \n    symbol\n    , security_name\n    , listing_exchange\n    , market_category\n    , is_ETF\nfrom symbols_meta", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_symbols_meta`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:11:56.920787Z", "completed_at": "2024-09-15T16:11:56.928183Z"}, {"name": "execute", "started_at": "2024-09-15T16:11:56.928559Z", "completed_at": "2024-09-15T16:12:03.751468Z"}], "thread_id": "Thread-20", "execution_time": 6.831995010375977, "adapter_response": {"_message": "CREATE TABLE (146.1k rows, 35.6 MiB processed)", "code": "CREATE TABLE", "rows_affected": 146100, "bytes_processed": 37312108, "bytes_billed": 37748736, "location": "US", "project_id": "first-project-262802", "job_id": "3a6e0d07-2dd4-4fca-9d5b-77e1eb0008ba", "slot_ms": 255500}, "message": "CREATE TABLE (146.1k rows, 35.6 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_calendar", "compiled": true, "compiled_code": "with \n\nbase_calendar as (select * from `first-project-262802`.`stock_analysis`.`base_calendar` )\n\n, adding_month_start_and_end as \n(\n    select\n        *\n        , case when day_of_date = 1 then TRUE else FALSE end as is_month_start\n        , case \n            when ( month_full = 'January' or month_full =  'March' or month_full = 'May' or month_full = 'July'or month_full = 'August' or month_full = 'October' or month_full = 'December') and day_of_date = 31 then TRUE \n            when ( month_full = 'April' or month_full =  'June' or month_full = 'September' or month_full = 'November' ) and day_of_date = 30 then TRUE \n            when month_full = 'February' and ( day_of_date = 28 or day_of_date = 29 ) then TRUE \n            else FALSE \n        end as is_month_end   \n    from base_calendar\n)\n\n, adding_quarter_start_and_end as \n(\n    select\n        *\n        , case \n            when ( month_full = 'January' or month_full =  'April' or month_full = 'July' or month_full = 'October') and is_month_start = TRUE then TRUE\n            else False\n        end as is_quarter_start\n        , case \n            when ( month_full = 'March' or month_full =  'June' or month_full = 'September' or month_full = 'December') and is_month_end = TRUE then TRUE\n            else False\n        end as is_quarter_end    \n    from adding_month_start_and_end\n)\n\n, adding_week_start_and_end as \n(\n    select\n        *\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_week_start\n        , case \n            when day_of_week = 7 then TRUE\n            else False\n        end as is_week_end\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_typical_trading_week_start\n        , case \n            when day_of_week = 5 then TRUE\n            else False\n        end as is_typical_trading_week_end\n    from adding_quarter_start_and_end\n)\n\n, base as (select * from adding_week_start_and_end )\n\n, adding_first_working_day_of_year as \n(\n    select\n        TRUE as is_first_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_year as \n(\n    select\n        TRUE as is_last_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_month as \n(\n    select\n        TRUE as is_first_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_month as \n(\n    select\n        TRUE as is_last_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_week as \n(\n    select\n        TRUE as is_first_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_week as \n(\n    select\n        TRUE as is_last_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date desc) = 1\n)\n\n\nselect \n    base.*\n\n    , concat(base.year_full,'-',base.week_number) as year_week\n    , concat(base.year_full,'-',base.month_abbrev,'-',base.week_number) as year_month_week\n    , concat(base.year_full,'-',base.month_abbrev) as year_month\n\n    , case when adding_first_working_day_of_year.is_first_working_day_of_year = TRUE then TRUE else FALSE end as is_first_working_day_of_year\n    , case when adding_last_working_day_of_year.is_last_working_day_of_year = TRUE then TRUE else FALSE end as is_last_working_day_of_year \n    \n    , case when adding_first_working_day_of_month.is_first_working_day_of_month = TRUE then TRUE else FALSE end as is_first_working_day_of_month\n    , case when adding_last_working_day_of_month.is_last_working_day_of_month = TRUE then TRUE else FALSE end as is_last_working_day_of_month\n    \n    , case when adding_first_working_day_of_week.is_first_working_day_of_week = TRUE then TRUE else FALSE end as is_first_working_day_of_week\n    , case when adding_last_working_day_of_week.is_last_working_day_of_week = TRUE then TRUE else FALSE end as is_last_working_day_of_week\n\nfrom base\nleft join adding_first_working_day_of_year using (date)\nleft join adding_last_working_day_of_year using (date)\nleft join adding_first_working_day_of_month using (date)\nleft join adding_last_working_day_of_month using (date)\nleft join adding_first_working_day_of_week using (date)\nleft join adding_last_working_day_of_week using (date)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_calendar`"}, {"status": "skipped", "timing": [], "thread_id": "Thread-2", "execution_time": 0, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_spy_2014_2024", "compiled": false, "compiled_code": null, "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spy_2014_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.842079Z", "completed_at": "2024-09-15T16:12:03.987937Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.199244Z", "completed_at": "2024-09-15T16:12:33.668320Z"}], "thread_id": "Thread-27", "execution_time": 29.868310928344727, "adapter_response": {"_message": "CREATE TABLE (1.3k rows, 42.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1294, "bytes_processed": 44105172, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "1a03dd9e-c082-4564-9d11-38289f52b827", "slot_ms": 301007}, "message": "CREATE TABLE (1.3k rows, 42.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_hlal_2019_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hlal_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.910288Z", "completed_at": "2024-09-15T16:12:04.066927Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.525322Z", "completed_at": "2024-09-15T16:12:39.010807Z"}], "thread_id": "Thread-4", "execution_time": 35.1984498500824, "adapter_response": {"_message": "CREATE TABLE (1.2k rows, 42.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1183, "bytes_processed": 44098956, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "7f8df8a2-1ee6-4dd6-98ed-5326cc1fb443", "slot_ms": 346823}, "message": "CREATE TABLE (1.2k rows, 42.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spus_2019_2024", "compiled": true, "compiled_code": "-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- --   DEPRACATED   -- -- -- -- --\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\n\nwith \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spus_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spus_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.801574Z", "completed_at": "2024-09-15T16:12:03.824703Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:03.856064Z", "completed_at": "2024-09-15T16:13:05.283505Z"}], "thread_id": "Thread-32", "execution_time": 61.51181483268738, "adapter_response": {"_message": "CREATE TABLE (2.9k rows, 42.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 2936, "bytes_processed": 44197124, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "8e467d84-1fc1-4ea2-96ee-86efdc48f9a7", "slot_ms": 450737}, "message": "CREATE TABLE (2.9k rows, 42.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_abbv_2013_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_abbv_2013_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_abbv_2013_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.893556Z", "completed_at": "2024-09-15T16:12:03.992275Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.328749Z", "completed_at": "2024-09-15T16:13:23.730724Z"}], "thread_id": "Thread-18", "execution_time": 79.9257869720459, "adapter_response": {"_message": "CREATE TABLE (3.1k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3091, "bytes_processed": 44205804, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "8bbb7222-f1bb-403a-af5e-5b13ffa2dc90", "slot_ms": 403247}, "message": "CREATE TABLE (3.1k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_meta_2012_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_meta_2012_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_meta_2012_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.918595Z", "completed_at": "2024-09-15T16:12:04.131773Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.652832Z", "completed_at": "2024-09-15T16:13:36.950188Z"}], "thread_id": "Thread-20", "execution_time": 93.13455605506897, "adapter_response": {"_message": "CREATE TABLE (3.6k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3568, "bytes_processed": 44232516, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "6f20cf16-8a77-4e72-868d-aaad20a433e5", "slot_ms": 447178}, "message": "CREATE TABLE (3.6k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_tsla_2010_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tsla_2010_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tsla_2010_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.899916Z", "completed_at": "2024-09-15T16:12:04.000449Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.394424Z", "completed_at": "2024-09-15T16:13:46.525508Z"}], "thread_id": "Thread-5", "execution_time": 102.71725487709045, "adapter_response": {"_message": "CREATE TABLE (5.6k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5607, "bytes_processed": 44346700, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "b73b02b0-18b6-4bad-8bfb-50bf6133684f", "slot_ms": 489593}, "message": "CREATE TABLE (5.6k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_nflx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nflx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nflx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.837291Z", "completed_at": "2024-09-15T16:12:03.923903Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.193607Z", "completed_at": "2024-09-15T16:13:55.061297Z"}], "thread_id": "Thread-21", "execution_time": 111.26226210594177, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 44315116, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "12e8ee06-f447-4da6-9374-8491d52f6de1", "slot_ms": 459914}, "message": "CREATE TABLE (5.0k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_googl_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_googl_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_googl_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.817023Z", "completed_at": "2024-09-15T16:12:03.847490Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:03.924851Z", "completed_at": "2024-09-15T16:13:55.429277Z"}], "thread_id": "Thread-8", "execution_time": 111.64434504508972, "adapter_response": {"_message": "CREATE TABLE (3.8k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3793, "bytes_processed": 44245116, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "73b3653f-a437-44f2-96c6-329a6b546a17", "slot_ms": 512126}, "message": "CREATE TABLE (3.8k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_avgo_2009_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_avgo_2009_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_avgo_2009_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.853401Z", "completed_at": "2024-09-15T16:12:03.991819Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.326354Z", "completed_at": "2024-09-15T16:13:56.208797Z"}], "thread_id": "Thread-25", "execution_time": 112.40394330024719, "adapter_response": {"_message": "CREATE TABLE (4.6k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 4598, "bytes_processed": 44290196, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "71ec3ee7-0167-4ed4-b389-e8ff5576ee33", "slot_ms": 552905}, "message": "CREATE TABLE (4.6k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_ma_2006_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ma_2006_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ma_2006_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.835394Z", "completed_at": "2024-09-15T16:12:03.922978Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.191675Z", "completed_at": "2024-09-15T16:13:56.296878Z"}], "thread_id": "Thread-6", "execution_time": 112.49783515930176, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 44315116, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "9da90ef5-4521-460a-aee8-6ae8ab0f93d8", "slot_ms": 413824}, "message": "CREATE TABLE (5.0k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_goog_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_goog_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_goog_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:33.675121Z", "completed_at": "2024-09-15T16:12:33.681728Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:33.682183Z", "completed_at": "2024-09-15T16:14:11.636927Z"}], "thread_id": "Thread-27", "execution_time": 97.96331810951233, "adapter_response": {"_message": "CREATE TABLE (4.1k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 4142, "bytes_processed": 44264660, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "49584e86-ffa4-4230-914a-1060c20ab096", "slot_ms": 500934}, "message": "CREATE TABLE (4.1k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_v_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_v_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_v_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.830621Z", "completed_at": "2024-09-15T16:12:03.918409Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.127775Z", "completed_at": "2024-09-15T16:14:15.447724Z"}], "thread_id": "Thread-11", "execution_time": 131.65425372123718, "adapter_response": {"_message": "CREATE TABLE (5.1k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5083, "bytes_processed": 44317356, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "079d527a-2449-4f7a-82ec-d8b205c7b1e0", "slot_ms": 490363}, "message": "CREATE TABLE (5.1k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_crm_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_crm_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_crm_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.901937Z", "completed_at": "2024-09-15T16:12:04.003759Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.396113Z", "completed_at": "2024-09-15T16:14:18.749155Z"}], "thread_id": "Thread-31", "execution_time": 134.94068717956543, "adapter_response": {"_message": "CREATE TABLE (6.4k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6444, "bytes_processed": 44393572, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "b0b1c0a8-b3c8-41d3-855e-46f4700fb924", "slot_ms": 553375}, "message": "CREATE TABLE (6.4k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_nvda_1999_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nvda_1999_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nvda_1999_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.821211Z", "completed_at": "2024-09-15T16:12:03.849510Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:03.988415Z", "completed_at": "2024-09-15T16:14:22.539575Z"}], "thread_id": "Thread-29", "execution_time": 138.75385928153992, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "84a8c816-b07b-4b1f-8663-f13205b53041", "slot_ms": 547891}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_bac_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_bac_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_bac_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.828178Z", "completed_at": "2024-09-15T16:12:03.914146Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.064839Z", "completed_at": "2024-09-15T16:14:23.643256Z"}], "thread_id": "Thread-30", "execution_time": 139.85170197486877, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "4d3dafce-bfe5-4cbe-9ee8-f6cd17140bef", "slot_ms": 600775}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_cost_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cost_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cost_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.825256Z", "completed_at": "2024-09-15T16:12:03.906009Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.000662Z", "completed_at": "2024-09-15T16:14:27.228771Z"}], "thread_id": "Thread-16", "execution_time": 143.43944764137268, "adapter_response": {"_message": "CREATE TABLE (7.1k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7126, "bytes_processed": 44431764, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "6baa1c90-2c27-403a-9a1b-83ac169133d6", "slot_ms": 630090}, "message": "CREATE TABLE (7.1k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_brk-b_1996_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_brk-b_1996_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_brk-b_1996_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.895877Z", "completed_at": "2024-09-15T16:12:03.992863Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.330368Z", "completed_at": "2024-09-15T16:14:32.560731Z"}], "thread_id": "Thread-17", "execution_time": 148.75576090812683, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "bcbc6130-a47d-4224-af9f-b50729177519", "slot_ms": 557713}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_mrk_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_mrk_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_mrk_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.795691Z", "completed_at": "2024-09-15T16:12:03.823610Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:03.845959Z", "completed_at": "2024-09-15T16:14:43.092433Z"}], "thread_id": "Thread-22", "execution_time": 159.32500195503235, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "bc645b69-607c-4768-8c28-5778c989ec28", "slot_ms": 611004}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_aapl_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_aapl_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_aapl_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.897972Z", "completed_at": "2024-09-15T16:12:04.000262Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.389375Z", "completed_at": "2024-09-15T16:14:48.549909Z"}], "thread_id": "Thread-9", "execution_time": 164.74427890777588, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "523299f8-3257-47f1-a474-46adc65e1235", "slot_ms": 616681}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_msft_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_msft_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_msft_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:05.459276Z", "completed_at": "2024-09-15T16:12:05.908466Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:05.914827Z", "completed_at": "2024-09-15T16:14:49.228241Z"}], "thread_id": "Thread-2", "execution_time": 165.16194987297058, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "59294914-657f-4685-bce7-6e670d580913", "slot_ms": 464316}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_unh_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_unh_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_unh_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.833392Z", "completed_at": "2024-09-15T16:12:03.921164Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.129852Z", "completed_at": "2024-09-15T16:14:52.792380Z"}], "thread_id": "Thread-19", "execution_time": 168.99742698669434, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "18faddf8-a97c-498d-a711-3e89f90713cf", "slot_ms": 540068}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_cvx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cvx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cvx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.904021Z", "completed_at": "2024-09-15T16:12:04.003950Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.457799Z", "completed_at": "2024-09-15T16:14:56.341873Z"}], "thread_id": "Thread-3", "execution_time": 172.53300786018372, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "a90aa9e3-4ebc-4ceb-b1e3-b91c7f2a756f", "slot_ms": 643334}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_pep_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pep_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pep_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.912285Z", "completed_at": "2024-09-15T16:12:04.067303Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.527805Z", "completed_at": "2024-09-15T16:14:59.275504Z"}], "thread_id": "Thread-14", "execution_time": 175.46306991577148, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "c4ad6444-dd82-493a-9ed0-90136a70055c", "slot_ms": 717782}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spy_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spy_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spy_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.908032Z", "completed_at": "2024-09-15T16:12:04.061895Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.459901Z", "completed_at": "2024-09-15T16:15:00.789382Z"}], "thread_id": "Thread-12", "execution_time": 176.98007607460022, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "4f1e422c-32e8-4746-a9cc-c965ffa7dd30", "slot_ms": 644500}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_pg_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pg_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pg_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.844037Z", "completed_at": "2024-09-15T16:12:03.987365Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.197684Z", "completed_at": "2024-09-15T16:15:08.676477Z"}], "thread_id": "Thread-13", "execution_time": 184.8758738040924, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "007d37e3-c786-4bd7-8de6-fa7a049228b7", "slot_ms": 564193}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_jnj_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jnj_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jnj_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.849690Z", "completed_at": "2024-09-15T16:12:03.991107Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.263089Z", "completed_at": "2024-09-15T16:15:09.424844Z"}], "thread_id": "Thread-24", "execution_time": 185.62069487571716, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "84fd7d30-5f30-4836-acf7-e40557c15e86", "slot_ms": 637585}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_ko_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ko_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ko_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.806230Z", "completed_at": "2024-09-15T16:12:03.828012Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:03.906272Z", "completed_at": "2024-09-15T16:15:11.441808Z"}], "thread_id": "Thread-7", "execution_time": 187.66437220573425, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "1c16b342-3dfa-461e-919d-91a6fa39bbc9", "slot_ms": 608746}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_adbe_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_adbe_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_adbe_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.813755Z", "completed_at": "2024-09-15T16:12:03.839207Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:03.921374Z", "completed_at": "2024-09-15T16:15:13.625000Z"}], "thread_id": "Thread-15", "execution_time": 189.8429799079895, "adapter_response": {"_message": "CREATE TABLE (6.9k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6869, "bytes_processed": 44417372, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "58b25a0c-51ac-4113-bed6-f238dbb166f5", "slot_ms": 706252}, "message": "CREATE TABLE (6.9k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_amzn_1997_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amzn_1997_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amzn_1997_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.851554Z", "completed_at": "2024-09-15T16:12:03.991369Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.324564Z", "completed_at": "2024-09-15T16:15:17.007671Z"}], "thread_id": "Thread-28", "execution_time": 193.20329689979553, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "9cd3a94c-89cc-4d3a-a5eb-8d68bb63ef2b", "slot_ms": 550985}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_lly_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_lly_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_lly_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.839393Z", "completed_at": "2024-09-15T16:12:03.924353Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.195904Z", "completed_at": "2024-09-15T16:15:29.700361Z"}], "thread_id": "Thread-1", "execution_time": 205.90104699134827, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "12a0b9dd-f83f-4b8e-a1cb-69a7256ae1b4", "slot_ms": 705299}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_hd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:39.015540Z", "completed_at": "2024-09-15T16:12:39.021143Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:39.021518Z", "completed_at": "2024-09-15T16:15:32.078290Z"}], "thread_id": "Thread-4", "execution_time": 173.06410193443298, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "9e8788ed-3ff4-4d05-b927-8eb9e5339217", "slot_ms": 647734}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_wmt_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_wmt_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_wmt_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.847685Z", "completed_at": "2024-09-15T16:12:03.990786Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.261466Z", "completed_at": "2024-09-15T16:15:36.882647Z"}], "thread_id": "Thread-23", "execution_time": 213.08160018920898, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "595db6aa-3605-40ab-abd5-c82245f6a0e1", "slot_ms": 621150}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_jpm_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jpm_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jpm_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.916382Z", "completed_at": "2024-09-15T16:12:04.131395Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:04.589881Z", "completed_at": "2024-09-15T16:15:51.517750Z"}], "thread_id": "Thread-10", "execution_time": 227.70464992523193, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "e369a9a9-f53e-4596-abe0-8a91eb6cb83c", "slot_ms": 671417}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_tmo_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tmo_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tmo_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:12:03.809888Z", "completed_at": "2024-09-15T16:12:03.832823Z"}, {"name": "execute", "started_at": "2024-09-15T16:12:03.914846Z", "completed_at": "2024-09-15T16:16:00.122052Z"}], "thread_id": "Thread-26", "execution_time": 236.34211111068726, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "d9ac205a-cbd7-4503-9918-9dc4c7112ea9", "slot_ms": 752485}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_amd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:13:05.291330Z", "completed_at": "2024-09-15T16:13:05.304121Z"}, {"name": "execute", "started_at": "2024-09-15T16:13:05.304608Z", "completed_at": "2024-09-15T16:16:16.203023Z"}], "thread_id": "Thread-32", "execution_time": 190.91315031051636, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44478132, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "95a908c5-02eb-4a5e-b741-65dc71ff7b0f", "slot_ms": 631382}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_xom_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_xom_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_xom_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:16:16.212278Z", "completed_at": "2024-09-15T16:16:16.227654Z"}, {"name": "execute", "started_at": "2024-09-15T16:16:16.228222Z", "completed_at": "2024-09-15T16:16:24.215458Z"}], "thread_id": "Thread-18", "execution_time": 8.005224227905273, "adapter_response": {"_message": "CREATE TABLE (224.9k rows, 93.8 MiB processed)", "code": "CREATE TABLE", "rows_affected": 224900, "bytes_processed": 98343262, "bytes_billed": 367001600, "location": "US", "project_id": "first-project-262802", "job_id": "322e664d-6f7b-4f9f-bb6c-8058ace2d666", "slot_ms": 26604}, "message": "CREATE TABLE (224.9k rows, 93.8 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.int_stock_analysis", "compiled": true, "compiled_code": "with\n\nspy as ( select * from `first-project-262802`.`stock_analysis`.`stg_spy_1993_2024` )\n, spus as ( select * from `first-project-262802`.`stock_analysis`.`stg_spus_2019_2024` )\n, hlal as ( select * from `first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024` )\n\n, aapl as ( select * from `first-project-262802`.`stock_analysis`.`stg_aapl_1993_2024` )\n, abbv as ( select * from `first-project-262802`.`stock_analysis`.`stg_abbv_2013_2024` )\n, adbe as ( select * from `first-project-262802`.`stock_analysis`.`stg_adbe_1993_2024` )\n, amd as ( select * from `first-project-262802`.`stock_analysis`.`stg_amd_1993_2024` )\n, amzn as ( select * from `first-project-262802`.`stock_analysis`.`stg_amzn_1997_2024` )\n, avgo as ( select * from `first-project-262802`.`stock_analysis`.`stg_avgo_2009_2024` )\n, bac as ( select * from `first-project-262802`.`stock_analysis`.`stg_bac_1993_2024` )\n, brk_b as ( select * from `first-project-262802`.`stock_analysis`.`stg_brk-b_1996_2024` )\n, cost as ( select * from `first-project-262802`.`stock_analysis`.`stg_cost_1993_2024` )\n, crm as ( select * from `first-project-262802`.`stock_analysis`.`stg_crm_2004_2024` )\n, cvx as ( select * from `first-project-262802`.`stock_analysis`.`stg_cvx_1993_2024` )\n, goog as ( select * from `first-project-262802`.`stock_analysis`.`stg_goog_2004_2024` )\n, googl as ( select * from `first-project-262802`.`stock_analysis`.`stg_googl_2004_2024` )\n, hd as ( select * from `first-project-262802`.`stock_analysis`.`stg_hd_1993_2024` )\n, jnj as ( select * from `first-project-262802`.`stock_analysis`.`stg_jnj_1993_2024` )\n, jpm as ( select * from `first-project-262802`.`stock_analysis`.`stg_jpm_1993_2024` )\n, ko as ( select * from `first-project-262802`.`stock_analysis`.`stg_ko_1993_2024` )\n, lly as ( select * from `first-project-262802`.`stock_analysis`.`stg_lly_1993_2024` )\n, ma as ( select * from `first-project-262802`.`stock_analysis`.`stg_ma_2006_2024` )\n, meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_meta_2012_2024` )\n, mrk as ( select * from `first-project-262802`.`stock_analysis`.`stg_mrk_1993_2024` )\n, msft as ( select * from `first-project-262802`.`stock_analysis`.`stg_msft_1993_2024` )\n, nflx as ( select * from `first-project-262802`.`stock_analysis`.`stg_nflx_1993_2024` )\n, nvda as ( select * from `first-project-262802`.`stock_analysis`.`stg_nvda_1999_2024` )\n, pep as ( select * from `first-project-262802`.`stock_analysis`.`stg_pep_1993_2024` )\n, pg as ( select * from `first-project-262802`.`stock_analysis`.`stg_pg_1993_2024` )\n, tmo as ( select * from `first-project-262802`.`stock_analysis`.`stg_tmo_1993_2024` )\n, tsla as ( select * from `first-project-262802`.`stock_analysis`.`stg_tsla_2010_2024` )\n, unh as ( select * from `first-project-262802`.`stock_analysis`.`stg_unh_1993_2024` )\n, v as ( select * from `first-project-262802`.`stock_analysis`.`stg_v_1993_2024` )\n, wmt as ( select * from `first-project-262802`.`stock_analysis`.`stg_wmt_1993_2024` )\n, xom as ( select * from `first-project-262802`.`stock_analysis`.`stg_xom_1993_2024` )\n\n\nselect * , 'SPY' as symbol from spy\nunion all\nselect * , 'SPUS' as symbol from spus\nunion all\nselect * , 'HLAL' as symbol from hlal\nunion all\n\nselect * , 'AAPL' as symbol from aapl\nunion all\nselect * , 'ABBV' as symbol from abbv\nunion all\nselect * , 'ADBE' as symbol from adbe\nunion all\nselect * , 'AMD' as symbol from amd\nunion all\nselect * , 'AMZN' as symbol from amzn\nunion all\nselect * , 'AVGO' as symbol from avgo\nunion all\nselect * , 'BAC' as symbol from bac\nunion all\nselect * , 'BRK-B' as symbol from brk_b\nunion all\nselect * , 'COST' as symbol from cost\nunion all\nselect * , 'CRM' as symbol from crm\nunion all\nselect * , 'CVX' as symbol from cvx\nunion all\nselect * , 'GOOG' as symbol from goog\nunion all\nselect * , 'GOOGL' as symbol from googl\nunion all\nselect * , 'HD' as symbol from hd\nunion all\nselect * , 'JNJ' as symbol from jnj\nunion all\nselect * , 'JPM' as symbol from jpm\nunion all\nselect * , 'KO' as symbol from ko\nunion all\nselect * , 'LLY' as symbol from lly\nunion all\nselect * , 'MA' as symbol from ma\nunion all\nselect * , 'META' as symbol from meta\nunion all\nselect * , 'MRK' as symbol from mrk\nunion all\nselect * , 'MSFT' as symbol from msft\nunion all\nselect * , 'NFLX' as symbol from nflx\nunion all\nselect * , 'NVDA' as symbol from nvda\nunion all\nselect * , 'PEP' as symbol from pep\nunion all\nselect * , 'PG' as symbol from pg\nunion all\nselect * , 'TMO' as symbol from tmo\nunion all\nselect * , 'TSLA' as symbol from tsla\nunion all\nselect * , 'UNH' as symbol from unh\nunion all\nselect * , 'V' as symbol from v\nunion all\nselect * , 'WMT' as symbol from wmt\nunion all\nselect * , 'XOM' as symbol from xom", "relation_name": "`first-project-262802`.`stock_analysis`.`int_stock_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-15T16:16:24.222146Z", "completed_at": "2024-09-15T16:16:24.226941Z"}, {"name": "execute", "started_at": "2024-09-15T16:16:24.227313Z", "completed_at": "2024-09-15T16:16:32.486342Z"}], "thread_id": "Thread-5", "execution_time": 8.265359878540039, "adapter_response": {"_message": "CREATE TABLE (224.9k rows, 95.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 224900, "bytes_processed": 100034087, "bytes_billed": 100663296, "location": "US", "project_id": "first-project-262802", "job_id": "f40bd89e-ec79-44ad-99ae-b21c52ccd0c1", "slot_ms": 18465}, "message": "CREATE TABLE (224.9k rows, 95.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stock_analysis", "compiled": true, "compiled_code": "with\n\nstock_analysis as ( select * from `first-project-262802`.`stock_analysis`.`int_stock_analysis` )\n\n, symbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_symbols_meta` )\n\nselect\n    *\nfrom stock_analysis\nleft join symbols_meta using (symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`stock_analysis`"}], "elapsed_time": 283.6811349391937, "args": {"source_freshness_run_project_hooks": false, "vars": {}, "enable_legacy_logger": false, "project_dir": "/Users/ahmed/Desktop/dbt/stock_analysis", "log_file_max_bytes": 10485760, "invocation_command": "dbt run", "defer": false, "which": "run", "log_level": "info", "use_colors": true, "version_check": true, "populate_cache": true, "strict_mode": false, "profiles_dir": "/Users/ahmed/.dbt", "show_resource_report": false, "introspect": true, "require_explicit_package_overrides_for_builtin_materializations": true, "select": [], "partial_parse_file_diff": true, "static_parser": true, "exclude": [], "printer_width": 80, "use_colors_file": true, "warn_error_options": {"include": [], "exclude": []}, "partial_parse": true, "log_format_file": "debug", "macro_debugging": false, "write_json": true, "send_anonymous_usage_stats": true, "log_level_file": "debug", "print": true, "empty": false, "quiet": false, "log_path": "/Users/ahmed/Desktop/dbt/stock_analysis/logs", "indirect_selection": "eager", "require_resource_names_without_spaces": false, "cache_selected_only": false, "log_format": "default", "favor_state": false}}