{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-09-19T14:26:35.083568Z", "invocation_id": "4e321635-4594-48ee-9a73-6c25ce2f1f24", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.815900Z", "completed_at": "2024-09-19T14:26:34.839039Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.863027Z", "completed_at": "2024-09-19T14:26:34.863035Z"}], "thread_id": "Thread-1", "execution_time": 0.061324119567871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_aapl_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`aapl`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_aapl_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.826395Z", "completed_at": "2024-09-19T14:26:34.842944Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.875488Z", "completed_at": "2024-09-19T14:26:34.875492Z"}], "thread_id": "Thread-2", "execution_time": 0.07268190383911133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_abbv_2013_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`abbv`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_abbv_2013_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.832172Z", "completed_at": "2024-09-19T14:26:34.850400Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.892278Z", "completed_at": "2024-09-19T14:26:34.892281Z"}], "thread_id": "Thread-3", "execution_time": 0.0881338119506836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_adbe_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`adbe`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_adbe_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.836687Z", "completed_at": "2024-09-19T14:26:34.865208Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.894212Z", "completed_at": "2024-09-19T14:26:34.894215Z"}], "thread_id": "Thread-4", "execution_time": 0.08747220039367676, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_all_nasdaq_stock_history", "compiled": true, "compiled_code": "select\t\n    -- int64_field_0\n    Date as date\n    , Open as open\n    , High as high\n    , Low as low\n    , Close as close_last\n    , 'Adj Close' as adj_close\n    , Volume as volume\n    , Symbol as symbol\n    , '2024-09-16' as etl_date\nfrom `first-project-262802`.`stock`.`all_nasdaq_stock_history`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_all_nasdaq_stock_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.839477Z", "completed_at": "2024-09-19T14:26:34.870711Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.895255Z", "completed_at": "2024-09-19T14:26:34.895258Z"}], "thread_id": "Thread-5", "execution_time": 0.08685493469238281, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_all_nasdaq_stock_info", "compiled": true, "compiled_code": "select\n    -- int64_field_0\n    index\n    , address1\n    , address2\n    , city\n    , zip\n    , country\n    , phone\n    , fax\n    , website\n    , industry\n    , industryKey\n    , industryDisp\n    , sector\n    , sectorKey\n    , sectorDisp\n    , longBusinessSummary\n    , fullTimeEmployees\n    , companyOfficers\n    , compensationAsOfEpochDate\n    , irWebsite\n    , maxAge\n    , priceHint\n    , previousClose\n    , open as open_price_from_stock_info\n    , dayLow\n    , dayHigh\n    , regularMarketPreviousClose\n    , regularMarketOpen\n    , regularMarketDayLow\n    , regularMarketDayHigh\n    , exDividendDate\n    , beta\n    , forwardPE\n    , volume as volume_from_stock_info\n    , regularMarketVolume\n    , averageVolume\n    , averageVolume10days\n    , averageDailyVolume10Day\n    , marketCap\n    , fiftyTwoWeekLow\n    , fiftyTwoWeekHigh\n    , priceToSalesTrailing12Months\n    , fiftyDayAverage\n    , twoHundredDayAverage\n    , currency\n    , enterpriseValue\n    , profitMargins\n    , floatShares\n    , sharesOutstanding\n    , sharesShort\n    , sharesShortPriorMonth\n    , sharesShortPreviousMonthDate\n    , dateShortInterest\n    , heldPercentInsiders\n    , heldPercentInstitutions\n    , shortRatio\n    , shortPercentOfFloat\n    , impliedSharesOutstanding\n    , bookValue\n    , priceToBook\n    , lastFiscalYearEnd\n    , nextFiscalYearEnd\n    , mostRecentQuarter\n    , netIncomeToCommon\n    , trailingEps\n    , forwardEps\n    , enterpriseToRevenue\n    , enterpriseToEbitda\n    -- , 52WeekChange\n    -- , SandP52WeekChange\n    , lastDividendValue\n    , lastDividendDate\n    , exchange\n    , quoteType\n    , symbol\n    , underlyingSymbol\n    , shortName\n    , longName\n    , firstTradeDateEpochUtc\n    , timeZoneFullName\n    , timeZoneShortName\n    , uuid\n    , messageBoardId\n    , gmtOffSetMilliseconds\n    , currentPrice\n    , recommendationMean\n    , recommendationKey\n    , totalCash\n    , totalCashPerShare\n    , ebitda\n    , totalDebt\n    , quickRatio\n    , currentRatio\n    , totalRevenue\n    , debtToEquity\n    , revenuePerShare\n    , returnOnAssets\n    , returnOnEquity\n    , revenueGrowth\n    , grossMargins\n    , ebitdaMargins\n    , operatingMargins\n    , financialCurrency\n    , trailingPegRatio\n    , state\n    , auditRisk\n    , boardRisk\n    , compensationRisk\n    , shareHolderRightsRisk\n    , overallRisk\n    , governanceEpochDate\n    , bid\n    , ask\n    , bidSize\n    , askSize\n    , sharesPercentSharesOut\n    , lastSplitFactor\n    , lastSplitDate\n    , targetHighPrice\n    , targetLowPrice\n    , targetMeanPrice\n    , targetMedianPrice\n    , numberOfAnalystOpinions\n    , freeCashflow\n    , operatingCashflow\n    , fiveYearAvgDividendYield\n    , earningsQuarterlyGrowth\n    , pegRatio\n    , earningsGrowth\n    , dividendRate\n    , dividendYield\n    , payoutRatio\n    , trailingAnnualDividendRate\n    , trailingAnnualDividendYield\n    , trailingPE\n    , grossProfits\n    , ETL_Date\nfrom `first-project-262802`.`stock`.`all_nasdaq_stock_info`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_all_nasdaq_stock_info`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.843127Z", "completed_at": "2024-09-19T14:26:34.878956Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.896833Z", "completed_at": "2024-09-19T14:26:34.896836Z"}], "thread_id": "Thread-6", "execution_time": 0.08597087860107422, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_amd_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`amd`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_amd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.845369Z", "completed_at": "2024-09-19T14:26:34.883040Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.897651Z", "completed_at": "2024-09-19T14:26:34.897655Z"}], "thread_id": "Thread-7", "execution_time": 0.08590006828308105, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_amzn_1997_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`amzn`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_amzn_1997_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.847481Z", "completed_at": "2024-09-19T14:26:34.887627Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.898778Z", "completed_at": "2024-09-19T14:26:34.898781Z"}], "thread_id": "Thread-8", "execution_time": 0.08606100082397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_avgo_2009_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`avgo`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_avgo_2009_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.850580Z", "completed_at": "2024-09-19T14:26:34.892849Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.900150Z", "completed_at": "2024-09-19T14:26:34.900153Z"}], "thread_id": "Thread-9", "execution_time": 0.0850520133972168, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_bac_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`bac`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_bac_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.852305Z", "completed_at": "2024-09-19T14:26:34.893031Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.900494Z", "completed_at": "2024-09-19T14:26:34.900497Z"}], "thread_id": "Thread-10", "execution_time": 0.08500099182128906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_brk-b_1996_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`brk-b`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_brk-b_1996_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.853997Z", "completed_at": "2024-09-19T14:26:34.893303Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.900999Z", "completed_at": "2024-09-19T14:26:34.901002Z"}], "thread_id": "Thread-11", "execution_time": 0.07807517051696777, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_calendar", "compiled": true, "compiled_code": "select \n    is_workday\n    , is_holiday\n    , is_holiday_leave\n    , a_date\n    , a_date as date\n    , extract(year from a_date) as year_of_date\n    , extract(month from a_date) as month_of_date\n    , extract(day from a_date) as day_of_date\n    , day_full\n    , day_full_capital_case\n    , day_full_lower_case\n    , day_abbrev\n    , is_weekday\n    , is_weekday_by_regex\n    , day_of_week\n    , day_of_month\n    , day_of_year\n    , week_of_month\n    , format_date('%W', a_date) as week_number\n    , trim(month_full) as month_full\n    , lower(trim(month_full)) as month_full_lower_case\n    , month_abbrev\n    , month_number\n    , quarter\n    , year_short\n    , year_full\n    , fiscal_quarter\n    , fiscal_year\n    , fiscal_year_full\n    , tomorrow\n    , one_week_later\n    , one_month_later\n    , three_months_later\n    , one_year_later\nfrom `first-project-262802`.`stock`.`400_years_of_generated_dates_and_holidays`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_calendar`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.856431Z", "completed_at": "2024-09-19T14:26:34.893495Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.901467Z", "completed_at": "2024-09-19T14:26:34.901470Z"}], "thread_id": "Thread-12", "execution_time": 0.07816600799560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_cost_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`cost`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_cost_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.859805Z", "completed_at": "2024-09-19T14:26:34.894017Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.902071Z", "completed_at": "2024-09-19T14:26:34.902074Z"}], "thread_id": "Thread-14", "execution_time": 0.0778501033782959, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_cvx_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`cvx`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_cvx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.861393Z", "completed_at": "2024-09-19T14:26:34.894562Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.902582Z", "completed_at": "2024-09-19T14:26:34.902585Z"}], "thread_id": "Thread-15", "execution_time": 0.07802891731262207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_goog_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`goog`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_goog_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.858117Z", "completed_at": "2024-09-19T14:26:34.894752Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.902886Z", "completed_at": "2024-09-19T14:26:34.902889Z"}], "thread_id": "Thread-13", "execution_time": 0.07924509048461914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_crm_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`crm`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_crm_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.863453Z", "completed_at": "2024-09-19T14:26:34.894943Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.903196Z", "completed_at": "2024-09-19T14:26:34.903199Z"}], "thread_id": "Thread-16", "execution_time": 0.07827305793762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_googl_2004_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`googl`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_googl_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.865395Z", "completed_at": "2024-09-19T14:26:34.895608Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.903780Z", "completed_at": "2024-09-19T14:26:34.903783Z"}], "thread_id": "Thread-17", "execution_time": 0.07832217216491699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_hd_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`hd`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_hd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.866965Z", "completed_at": "2024-09-19T14:26:34.895776Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.904100Z", "completed_at": "2024-09-19T14:26:34.904102Z"}], "thread_id": "Thread-18", "execution_time": 0.07833194732666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_hlal_2019_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`hlal`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_hlal_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.869220Z", "completed_at": "2024-09-19T14:26:34.895999Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.904408Z", "completed_at": "2024-09-19T14:26:34.904411Z"}], "thread_id": "Thread-19", "execution_time": 0.07834815979003906, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_jnj_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`jnj`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_jnj_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.870892Z", "completed_at": "2024-09-19T14:26:34.896558Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.904921Z", "completed_at": "2024-09-19T14:26:34.904923Z"}], "thread_id": "Thread-20", "execution_time": 0.07645583152770996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_jpm_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`jpm`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_jpm_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.873976Z", "completed_at": "2024-09-19T14:26:34.897275Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.905428Z", "completed_at": "2024-09-19T14:26:34.905431Z"}], "thread_id": "Thread-22", "execution_time": 0.07631278038024902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_lly_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`lly`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_lly_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.872443Z", "completed_at": "2024-09-19T14:26:34.897456Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.905738Z", "completed_at": "2024-09-19T14:26:34.905740Z"}], "thread_id": "Thread-21", "execution_time": 0.07693600654602051, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_ko_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`ko`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_ko_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.875862Z", "completed_at": "2024-09-19T14:26:34.898002Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.906258Z", "completed_at": "2024-09-19T14:26:34.906261Z"}], "thread_id": "Thread-23", "execution_time": 0.07649397850036621, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_ma_2006_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`ma`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_ma_2006_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.877392Z", "completed_at": "2024-09-19T14:26:34.898158Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.906554Z", "completed_at": "2024-09-19T14:26:34.906556Z"}], "thread_id": "Thread-24", "execution_time": 0.07650995254516602, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_meta_2012_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`meta`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_meta_2012_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.880792Z", "completed_at": "2024-09-19T14:26:34.898362Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.906865Z", "completed_at": "2024-09-19T14:26:34.906868Z"}], "thread_id": "Thread-26", "execution_time": 0.07605886459350586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_msft_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`msft`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_msft_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.879140Z", "completed_at": "2024-09-19T14:26:34.898556Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.907187Z", "completed_at": "2024-09-19T14:26:34.907189Z"}], "thread_id": "Thread-25", "execution_time": 0.07666277885437012, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_mrk_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`mrk`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_mrk_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.883218Z", "completed_at": "2024-09-19T14:26:34.899094Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.907716Z", "completed_at": "2024-09-19T14:26:34.907719Z"}], "thread_id": "Thread-27", "execution_time": 0.076416015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_nflx_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`nflx`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_nflx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.884699Z", "completed_at": "2024-09-19T14:26:34.899322Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.908027Z", "completed_at": "2024-09-19T14:26:34.908029Z"}], "thread_id": "Thread-28", "execution_time": 0.0764460563659668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_nvda_1999_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`nvda`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_nvda_1999_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.886174Z", "completed_at": "2024-09-19T14:26:34.899490Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.908348Z", "completed_at": "2024-09-19T14:26:34.908351Z"}], "thread_id": "Thread-29", "execution_time": 0.07649827003479004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_pep_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`pep`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_pep_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.887815Z", "completed_at": "2024-09-19T14:26:34.899947Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.908882Z", "completed_at": "2024-09-19T14:26:34.908885Z"}], "thread_id": "Thread-30", "execution_time": 0.07430291175842285, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_pg_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`pg`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_pg_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.889357Z", "completed_at": "2024-09-19T14:26:34.900833Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.909722Z", "completed_at": "2024-09-19T14:26:34.909725Z"}], "thread_id": "Thread-31", "execution_time": 0.07485389709472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_spus_2019_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spus_2019_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spus_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.890832Z", "completed_at": "2024-09-19T14:26:34.901302Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.910123Z", "completed_at": "2024-09-19T14:26:34.910126Z"}], "thread_id": "Thread-32", "execution_time": 0.07496333122253418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_spy_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`spy_1993_2024`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_spy_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.914791Z", "completed_at": "2024-09-19T14:26:34.927268Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.932552Z", "completed_at": "2024-09-19T14:26:34.932557Z"}], "thread_id": "Thread-1", "execution_time": 0.030757904052734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_symbols_meta", "compiled": true, "compiled_code": "select \n    'Nasdaq Traded' as is_nasdaq_traded\n    , 'Symbol' as symbol\n    , 'Security Name' as security_name\n    , 'Listing Exchange' as listing_exchange\n    , 'Market Category' as market_category\n    , 'ETF' as is_ETF\n    , 'Round Lot Size' as round_lot_size\n    , 'Test Issue' as is_test_issue\n    , 'Financial Status' as financial_status\n    , 'CQS Symbol' as cqs_symbol\n    , 'NASDAQ Symbol' as nasdaq_symbol\n    , 'NextShares' as nextshares\nfrom `first-project-262802`.`stock`.`symbols_valid_meta`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_symbols_meta`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.917568Z", "completed_at": "2024-09-19T14:26:34.927458Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.933078Z", "completed_at": "2024-09-19T14:26:34.933082Z"}], "thread_id": "Thread-2", "execution_time": 0.028416156768798828, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_tmo_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`tmo`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_tmo_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.919507Z", "completed_at": "2024-09-19T14:26:34.931955Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.933647Z", "completed_at": "2024-09-19T14:26:34.933651Z"}], "thread_id": "Thread-3", "execution_time": 0.025049209594726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_tsla_2010_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`tsla`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_tsla_2010_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.921193Z", "completed_at": "2024-09-19T14:26:34.932169Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.933979Z", "completed_at": "2024-09-19T14:26:34.933982Z"}], "thread_id": "Thread-4", "execution_time": 0.021552085876464844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_unh_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`unh`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_unh_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.922742Z", "completed_at": "2024-09-19T14:26:34.932354Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.934333Z", "completed_at": "2024-09-19T14:26:34.934336Z"}], "thread_id": "Thread-5", "execution_time": 0.021565914154052734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_v_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`v`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_v_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.924214Z", "completed_at": "2024-09-19T14:26:34.932896Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.935251Z", "completed_at": "2024-09-19T14:26:34.935254Z"}], "thread_id": "Thread-6", "execution_time": 0.02195286750793457, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_wmt_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`wmt`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_wmt_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.925726Z", "completed_at": "2024-09-19T14:26:34.933452Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.935619Z", "completed_at": "2024-09-19T14:26:34.935622Z"}], "thread_id": "Thread-7", "execution_time": 0.02204608917236328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.base_xom_1993_2024", "compiled": true, "compiled_code": "select \n  date\n  , close_last\n  , adj_close\n  , volume\n  , open\n  , high\n  , low\nfrom `first-project-262802`.`stock`.`xom`", "relation_name": "`first-project-262802`.`stock_analysis`.`base_xom_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.929169Z", "completed_at": "2024-09-19T14:26:34.934654Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.936058Z", "completed_at": "2024-09-19T14:26:34.936061Z"}], "thread_id": "Thread-9", "execution_time": 0.021512985229492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_calendar", "compiled": true, "compiled_code": "with \n\nbase_calendar as (select * from `first-project-262802`.`stock_analysis`.`base_calendar` )\n\n, adding_month_start_and_end as \n(\n    select\n        *\n        , case when day_of_date = 1 then TRUE else FALSE end as is_month_start\n        , case \n            when ( month_full = 'January' or month_full =  'March' or month_full = 'May' or month_full = 'July'or month_full = 'August' or month_full = 'October' or month_full = 'December') and day_of_date = 31 then TRUE \n            when ( month_full = 'April' or month_full =  'June' or month_full = 'September' or month_full = 'November' ) and day_of_date = 30 then TRUE \n            when month_full = 'February' and ( day_of_date = 28 or day_of_date = 29 ) then TRUE \n            else FALSE \n        end as is_month_end   \n    from base_calendar\n)\n\n, adding_quarter_start_and_end as \n(\n    select\n        *\n        , case \n            when ( month_full = 'January' or month_full =  'April' or month_full = 'July' or month_full = 'October') and is_month_start = TRUE then TRUE\n            else False\n        end as is_quarter_start\n        , case \n            when ( month_full = 'March' or month_full =  'June' or month_full = 'September' or month_full = 'December') and is_month_end = TRUE then TRUE\n            else False\n        end as is_quarter_end    \n    from adding_month_start_and_end\n)\n\n, adding_week_start_and_end as \n(\n    select\n        *\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_week_start\n        , case \n            when day_of_week = 7 then TRUE\n            else False\n        end as is_week_end\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_typical_trading_week_start\n        , case \n            when day_of_week = 5 then TRUE\n            else False\n        end as is_typical_trading_week_end\n    from adding_quarter_start_and_end\n)\n\n, base as (select * from adding_week_start_and_end )\n\n, adding_first_working_day_of_year as \n(\n    select\n        TRUE as is_first_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_year as \n(\n    select\n        TRUE as is_last_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_month as \n(\n    select\n        TRUE as is_first_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_month as \n(\n    select\n        TRUE as is_last_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_week as \n(\n    select\n        TRUE as is_first_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_week as \n(\n    select\n        TRUE as is_last_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date desc) = 1\n)\n\n\nselect \n    base.*\n\n    , concat(base.year_full,'-',base.week_number) as year_week\n    , concat(base.year_full,'-',base.month_abbrev,'-',base.week_number) as year_month_week\n    , concat(base.year_full,'-',base.month_abbrev) as year_month\n\n    , case when adding_first_working_day_of_year.is_first_working_day_of_year = TRUE then TRUE else FALSE end as is_first_working_day_of_year\n    , case when adding_last_working_day_of_year.is_last_working_day_of_year = TRUE then TRUE else FALSE end as is_last_working_day_of_year \n    \n    , case when adding_first_working_day_of_month.is_first_working_day_of_month = TRUE then TRUE else FALSE end as is_first_working_day_of_month\n    , case when adding_last_working_day_of_month.is_last_working_day_of_month = TRUE then TRUE else FALSE end as is_last_working_day_of_month\n    \n    , case when adding_first_working_day_of_week.is_first_working_day_of_week = TRUE then TRUE else FALSE end as is_first_working_day_of_week\n    , case when adding_last_working_day_of_week.is_last_working_day_of_week = TRUE then TRUE else FALSE end as is_last_working_day_of_week\n\nfrom base\nleft join adding_first_working_day_of_year using (date)\nleft join adding_last_working_day_of_year using (date)\nleft join adding_first_working_day_of_month using (date)\nleft join adding_last_working_day_of_month using (date)\nleft join adding_first_working_day_of_week using (date)\nleft join adding_last_working_day_of_week using (date)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_calendar`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.927625Z", "completed_at": "2024-09-19T14:26:34.934897Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.936374Z", "completed_at": "2024-09-19T14:26:34.936377Z"}], "thread_id": "Thread-8", "execution_time": 0.022426128387451172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_all_nasdaq_stock_info", "compiled": true, "compiled_code": "with \n\nbase as ( select * from `first-project-262802`.`stock_analysis`.`base_all_nasdaq_stock_info` )\n\nselect\n    distinct \n    *\nfrom base\nwhere index = 0", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_info`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.938994Z", "completed_at": "2024-09-19T14:26:34.946353Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.953742Z", "completed_at": "2024-09-19T14:26:34.953745Z"}], "thread_id": "Thread-11", "execution_time": 0.01711106300354004, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_symbols_meta", "compiled": true, "compiled_code": "with \n\nsymbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`base_symbols_meta` )\n\nselect \n    symbol\n    , security_name\n    , listing_exchange\n    , market_category\n    , is_ETF\nfrom symbols_meta", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_symbols_meta`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.949001Z", "completed_at": "2024-09-19T14:26:34.964443Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:34.999615Z", "completed_at": "2024-09-19T14:26:34.999619Z"}], "thread_id": "Thread-12", "execution_time": 0.061212778091430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_aapl_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_aapl_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n        -- , sum(volume) as total_weekly_volume\n        -- , max(volume) as max_weekly_volume\n        -- , min(volume) as min_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_aapl_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.954207Z", "completed_at": "2024-09-19T14:26:34.979970Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.018214Z", "completed_at": "2024-09-19T14:26:35.018217Z"}], "thread_id": "Thread-14", "execution_time": 0.07723712921142578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_abbv_2013_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_abbv_2013_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_abbv_2013_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.956463Z", "completed_at": "2024-09-19T14:26:34.983811Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.019123Z", "completed_at": "2024-09-19T14:26:35.019126Z"}], "thread_id": "Thread-15", "execution_time": 0.07761406898498535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_adbe_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_adbe_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_adbe_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.958674Z", "completed_at": "2024-09-19T14:26:34.989521Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.019915Z", "completed_at": "2024-09-19T14:26:35.019918Z"}], "thread_id": "Thread-13", "execution_time": 0.07788395881652832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_amd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.961469Z", "completed_at": "2024-09-19T14:26:34.994023Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.020856Z", "completed_at": "2024-09-19T14:26:35.020859Z"}], "thread_id": "Thread-16", "execution_time": 0.07826709747314453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_amzn_1997_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amzn_1997_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amzn_1997_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.964601Z", "completed_at": "2024-09-19T14:26:35.005260Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.022787Z", "completed_at": "2024-09-19T14:26:35.022790Z"}], "thread_id": "Thread-17", "execution_time": 0.0788419246673584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_avgo_2009_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_avgo_2009_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_avgo_2009_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.966935Z", "completed_at": "2024-09-19T14:26:35.011633Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.023940Z", "completed_at": "2024-09-19T14:26:35.023943Z"}], "thread_id": "Thread-18", "execution_time": 0.07927393913269043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_bac_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_bac_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_bac_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.971649Z", "completed_at": "2024-09-19T14:26:35.017764Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.025324Z", "completed_at": "2024-09-19T14:26:35.025327Z"}], "thread_id": "Thread-20", "execution_time": 0.07920694351196289, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_cost_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cost_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cost_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.969736Z", "completed_at": "2024-09-19T14:26:35.017939Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.025661Z", "completed_at": "2024-09-19T14:26:35.025664Z"}], "thread_id": "Thread-19", "execution_time": 0.07975292205810547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_brk-b_1996_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_brk-b_1996_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_brk-b_1996_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.973672Z", "completed_at": "2024-09-19T14:26:35.018554Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.026350Z", "completed_at": "2024-09-19T14:26:35.026353Z"}], "thread_id": "Thread-22", "execution_time": 0.07988786697387695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_crm_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_crm_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_crm_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.975563Z", "completed_at": "2024-09-19T14:26:35.018738Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.026666Z", "completed_at": "2024-09-19T14:26:35.026668Z"}], "thread_id": "Thread-21", "execution_time": 0.07984375953674316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_cvx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cvx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cvx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.977423Z", "completed_at": "2024-09-19T14:26:35.018955Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.026967Z", "completed_at": "2024-09-19T14:26:35.026970Z"}], "thread_id": "Thread-23", "execution_time": 0.0799570083618164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_goog_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_goog_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_goog_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.980148Z", "completed_at": "2024-09-19T14:26:35.019506Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.027467Z", "completed_at": "2024-09-19T14:26:35.027471Z"}], "thread_id": "Thread-24", "execution_time": 0.0801091194152832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_googl_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_googl_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_googl_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.981987Z", "completed_at": "2024-09-19T14:26:35.019685Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.027777Z", "completed_at": "2024-09-19T14:26:35.027780Z"}], "thread_id": "Thread-26", "execution_time": 0.08022499084472656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_hd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.984011Z", "completed_at": "2024-09-19T14:26:35.020291Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.028288Z", "completed_at": "2024-09-19T14:26:35.028291Z"}], "thread_id": "Thread-25", "execution_time": 0.08037900924682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_hlal_2019_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hlal_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.985849Z", "completed_at": "2024-09-19T14:26:35.020465Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.028598Z", "completed_at": "2024-09-19T14:26:35.028600Z"}], "thread_id": "Thread-27", "execution_time": 0.0805048942565918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_jnj_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jnj_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jnj_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.987692Z", "completed_at": "2024-09-19T14:26:35.020674Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.028901Z", "completed_at": "2024-09-19T14:26:35.028904Z"}], "thread_id": "Thread-28", "execution_time": 0.08047103881835938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_jpm_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jpm_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jpm_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.989700Z", "completed_at": "2024-09-19T14:26:35.021248Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.029238Z", "completed_at": "2024-09-19T14:26:35.029240Z"}], "thread_id": "Thread-29", "execution_time": 0.08063697814941406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_ko_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ko_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ko_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.994193Z", "completed_at": "2024-09-19T14:26:35.021730Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.029752Z", "completed_at": "2024-09-19T14:26:35.029755Z"}], "thread_id": "Thread-31", "execution_time": 0.07890510559082031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_ma_2006_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ma_2006_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ma_2006_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.991561Z", "completed_at": "2024-09-19T14:26:35.021972Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.030055Z", "completed_at": "2024-09-19T14:26:35.030058Z"}], "thread_id": "Thread-30", "execution_time": 0.08127307891845703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_lly_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_lly_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_lly_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.996028Z", "completed_at": "2024-09-19T14:26:35.022364Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.030353Z", "completed_at": "2024-09-19T14:26:35.030355Z"}], "thread_id": "Thread-32", "execution_time": 0.07931208610534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_meta_2012_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_meta_2012_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_meta_2012_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.997817Z", "completed_at": "2024-09-19T14:26:35.022546Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.030657Z", "completed_at": "2024-09-19T14:26:35.030659Z"}], "thread_id": "Thread-1", "execution_time": 0.07942914962768555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_mrk_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_mrk_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_mrk_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.001877Z", "completed_at": "2024-09-19T14:26:35.023190Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.030993Z", "completed_at": "2024-09-19T14:26:35.030996Z"}], "thread_id": "Thread-2", "execution_time": 0.07923412322998047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_nasdaq_history_base", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_all_nasdaq_stock_history` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\nselect * from base", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nasdaq_history_base`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:34.999992Z", "completed_at": "2024-09-19T14:26:35.023357Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.031303Z", "completed_at": "2024-09-19T14:26:35.031305Z"}], "thread_id": "Thread-10", "execution_time": 0.07972598075866699, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_msft_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_msft_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_msft_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.003413Z", "completed_at": "2024-09-19T14:26:35.023527Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.031595Z", "completed_at": "2024-09-19T14:26:35.031598Z"}], "thread_id": "Thread-3", "execution_time": 0.07964301109313965, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_nflx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nflx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nflx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.005476Z", "completed_at": "2024-09-19T14:26:35.023733Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.031889Z", "completed_at": "2024-09-19T14:26:35.031891Z"}], "thread_id": "Thread-4", "execution_time": 0.0795888900756836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_nvda_1999_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nvda_1999_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nvda_1999_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.007975Z", "completed_at": "2024-09-19T14:26:35.024376Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.032212Z", "completed_at": "2024-09-19T14:26:35.032214Z"}], "thread_id": "Thread-5", "execution_time": 0.07973241806030273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_pep_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pep_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pep_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.009826Z", "completed_at": "2024-09-19T14:26:35.024550Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.032508Z", "completed_at": "2024-09-19T14:26:35.032511Z"}], "thread_id": "Thread-6", "execution_time": 0.0798482894897461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_pg_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pg_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pg_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.013662Z", "completed_at": "2024-09-19T14:26:35.024980Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.034894Z", "completed_at": "2024-09-19T14:26:35.034898Z"}], "thread_id": "Thread-9", "execution_time": 0.08189010620117188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_spy_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spy_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spy_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.011805Z", "completed_at": "2024-09-19T14:26:35.025162Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.035240Z", "completed_at": "2024-09-19T14:26:35.035244Z"}], "thread_id": "Thread-7", "execution_time": 0.0824129581451416, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_spus_2019_2024", "compiled": true, "compiled_code": "-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- --   DEPRACATED   -- -- -- -- --\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\n\nwith \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spus_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spus_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.015506Z", "completed_at": "2024-09-19T14:26:35.025979Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.035682Z", "completed_at": "2024-09-19T14:26:35.035685Z"}], "thread_id": "Thread-8", "execution_time": 0.08249783515930176, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_tmo_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tmo_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tmo_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.032803Z", "completed_at": "2024-09-19T14:26:35.038866Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.047044Z", "completed_at": "2024-09-19T14:26:35.047051Z"}], "thread_id": "Thread-11", "execution_time": 0.029675006866455078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_tsla_2010_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tsla_2010_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tsla_2010_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.039227Z", "completed_at": "2024-09-19T14:26:35.049990Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.056003Z", "completed_at": "2024-09-19T14:26:35.056009Z"}], "thread_id": "Thread-12", "execution_time": 0.02652120590209961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_unh_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_unh_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_unh_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.045127Z", "completed_at": "2024-09-19T14:26:35.053873Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.058235Z", "completed_at": "2024-09-19T14:26:35.058238Z"}], "thread_id": "Thread-15", "execution_time": 0.021979093551635742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_wmt_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_wmt_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_wmt_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.047397Z", "completed_at": "2024-09-19T14:26:35.055825Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.058718Z", "completed_at": "2024-09-19T14:26:35.058722Z"}], "thread_id": "Thread-13", "execution_time": 0.02217721939086914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_xom_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_xom_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_xom_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.042163Z", "completed_at": "2024-09-19T14:26:35.056329Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.059414Z", "completed_at": "2024-09-19T14:26:35.059417Z"}], "thread_id": "Thread-14", "execution_time": 0.02346491813659668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_v_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_v_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_v_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.050498Z", "completed_at": "2024-09-19T14:26:35.059194Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.060361Z", "completed_at": "2024-09-19T14:26:35.060365Z"}], "thread_id": "Thread-10", "execution_time": 0.019124984741210938, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_nasdaq_history_weekly_monthly_yearly_price", "compiled": true, "compiled_code": "with \n\nbase as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_history_base` )\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , symbol\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(nullif(volume,0))/7) as avg_weekly_volume\n    from base\n    group by 1,2,3\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , symbol\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2,3\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , symbol\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1,2\n)\n\n\n\n\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full, week_number, symbol)\nleft join monthly_price using (year_full, month_number, symbol)\nleft join yearly_price using (year_full, symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nasdaq_history_weekly_monthly_yearly_price`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.052214Z", "completed_at": "2024-09-19T14:26:35.059734Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.060952Z", "completed_at": "2024-09-19T14:26:35.060955Z"}], "thread_id": "Thread-16", "execution_time": 0.019466161727905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_nasdaq_monthly_price_movement", "compiled": true, "compiled_code": "with \n\nbase as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_history_base` )\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , symbol\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number, symbol ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , symbol\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number, symbol ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , symbol\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((nullif(avg_daily_price_month_end,0)/nullif(avg_daily_price_month_start,0))-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full, month_number, symbol)\n    left join last_avg_daily_price_per_month using (year_full, month_number, symbol)\n)\n\n\n\n\n\n\n-- select\n--     distinct *\n-- from base\n-- left join daily_price_movement_in_month using (year_full, month_number, symbol)\n\nselect * from daily_price_movement_in_month", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nasdaq_monthly_price_movement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.054101Z", "completed_at": "2024-09-19T14:26:35.059996Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.061286Z", "completed_at": "2024-09-19T14:26:35.061289Z"}], "thread_id": "Thread-17", "execution_time": 0.019576072692871094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_nasdaq_weekly_price_movement", "compiled": true, "compiled_code": "with \n\nbase as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_history_base` )\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , symbol\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number, symbol ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , symbol\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number, symbol ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , symbol\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((nullif(avg_daily_price_week_end,0)/nullif(avg_daily_price_week_start,0))-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full, week_number, symbol)\n    left join last_avg_daily_price_per_week using (year_full, week_number, symbol)\n)\n\n\n\n\n\n\n-- select\n--     distinct *\n-- from base\n-- left join daily_price_movement_in_week using (year_full, week_number, symbol)\n\nselect * from daily_price_movement_in_week", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nasdaq_weekly_price_movement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.056506Z", "completed_at": "2024-09-19T14:26:35.060709Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.061663Z", "completed_at": "2024-09-19T14:26:35.061667Z"}], "thread_id": "Thread-3", "execution_time": 0.019752979278564453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_nasdaq_yearly_price_movement", "compiled": true, "compiled_code": "with \n\nbase as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_history_base` )\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , symbol\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, symbol ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , symbol\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, symbol ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , symbol\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((nullif(avg_daily_price_year_end,0)/nullif(avg_daily_price_year_start,0))-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full, symbol)\n    left join last_avg_daily_price_per_year using (year_full, symbol)\n)\n\n\n\n\n\n\n\n\n\n-- select\n--     distinct *\n-- from base\n-- left join daily_price_movement_in_year using (year_full, symbol)\n\nselect * from daily_price_movement_in_year", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nasdaq_yearly_price_movement`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.062901Z", "completed_at": "2024-09-19T14:26:35.066530Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.066719Z", "completed_at": "2024-09-19T14:26:35.066722Z"}], "thread_id": "Thread-20", "execution_time": 0.004338741302490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stg_all_nasdaq_stock_history", "compiled": true, "compiled_code": "with \n\nnasdaq_history_weekly_monthly_yearly_price as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_history_weekly_monthly_yearly_price` )\n\n, nasdaq_weekly_price_movement as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_weekly_price_movement` )\n\n, nasdaq_monthly_price_movement as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_monthly_price_movement` )\n\n, nasdaq_yearly_price_movement as ( select * from `first-project-262802`.`stock_analysis`.`stg_nasdaq_yearly_price_movement` )\n\n\n\nselect\n    distinct *\nfrom nasdaq_history_weekly_monthly_yearly_price\nleft join nasdaq_weekly_price_movement using (year_full, week_number, symbol)\nleft join nasdaq_monthly_price_movement using (year_full, month_number, symbol)\nleft join nasdaq_yearly_price_movement using (year_full, symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.068817Z", "completed_at": "2024-09-19T14:26:35.074304Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.074494Z", "completed_at": "2024-09-19T14:26:35.074498Z"}], "thread_id": "Thread-22", "execution_time": 0.006941080093383789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.int_nasdaq", "compiled": true, "compiled_code": "-- with\n\n-- nasdaq_ticker_history as ( select * from `first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_history` )\n\n-- , nasdaq_ticker_info as ( select * from `first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_info` )\n\n-- select\n--     *\n-- from nasdaq_ticker_history\n-- left join nasdaq_ticker_info using (symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`int_nasdaq`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.072565Z", "completed_at": "2024-09-19T14:26:35.074916Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.075267Z", "completed_at": "2024-09-19T14:26:35.075270Z"}], "thread_id": "Thread-23", "execution_time": 0.006908893585205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.nasdaq", "compiled": true, "compiled_code": "with\n\nnasdaq_ticker_history as ( select * from `first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_history` )\n\n, nasdaq_ticker_info as ( select * from `first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_info` )\n\nselect\n    *\nfrom nasdaq_ticker_history\nleft join nasdaq_ticker_info using (symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`nasdaq`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.070600Z", "completed_at": "2024-09-19T14:26:35.075100Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.075587Z", "completed_at": "2024-09-19T14:26:35.075590Z"}], "thread_id": "Thread-21", "execution_time": 0.00760197639465332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.int_stock_analysis", "compiled": true, "compiled_code": "with\n\nspy as ( select * except (adj_close) from `first-project-262802`.`stock_analysis`.`stg_spy_1993_2024` )\n, spus as ( select * except (adj_close) from `first-project-262802`.`stock_analysis`.`stg_spus_2019_2024` )\n, hlal as ( select * except (adj_close) from `first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024` )\n\n, nasdaq as ( select * except (adj_close) from `first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_history` )\n\n\n\n\nselect * , 'SPY' as symbol from spy\nunion all\nselect * , 'SPUS' as symbol from spus\nunion all\nselect * , 'HLAL' as symbol from hlal\nunion all\n\nselect * except (symbol), symbol from nasdaq", "relation_name": "`first-project-262802`.`stock_analysis`.`int_stock_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-19T14:26:35.076638Z", "completed_at": "2024-09-19T14:26:35.078817Z"}, {"name": "execute", "started_at": "2024-09-19T14:26:35.078996Z", "completed_at": "2024-09-19T14:26:35.079000Z"}], "thread_id": "Thread-26", "execution_time": 0.0028090476989746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stock_analysis.stock_analysis", "compiled": true, "compiled_code": "with\n\nstock_analysis as ( select * from `first-project-262802`.`stock_analysis`.`int_stock_analysis` )\n\n-- , symbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_symbols_meta` )\n\n, symbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_all_nasdaq_stock_info` )\n\nselect\n    *\nfrom stock_analysis\nleft join symbols_meta using (symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`stock_analysis`"}], "elapsed_time": 0.9988281726837158, "args": {"populate_cache": true, "write_json": true, "log_path": "/Users/ahmed/Desktop/dbt/stock_analysis/logs", "exclude": [], "project_dir": "/Users/ahmed/Desktop/dbt/stock_analysis", "compile": true, "favor_state": false, "vars": {}, "printer_width": 80, "source_freshness_run_project_hooks": false, "print": true, "defer": false, "static_parser": true, "profiles_dir": "/Users/ahmed/.dbt", "log_format_file": "debug", "log_format": "default", "require_resource_names_without_spaces": false, "log_level_file": "debug", "invocation_command": "dbt docs generate", "enable_legacy_logger": false, "show_resource_report": false, "strict_mode": false, "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "partial_parse": true, "send_anonymous_usage_stats": true, "static": false, "macro_debugging": false, "which": "generate", "empty_catalog": false, "select": [], "quiet": false, "introspect": true, "cache_selected_only": false, "use_colors_file": true, "log_file_max_bytes": 10485760, "require_explicit_package_overrides_for_builtin_materializations": true, "use_colors": true, "version_check": true, "log_level": "info", "partial_parse_file_diff": true}}