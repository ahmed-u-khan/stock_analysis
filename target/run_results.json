{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.2", "generated_at": "2024-09-11T17:07:31.517058Z", "invocation_id": "a692ac53-7de6-4b5c-abbb-6cefc4a79047", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:48.567445Z", "completed_at": "2024-09-11T17:02:48.575434Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:48.575908Z", "completed_at": "2024-09-11T17:02:51.437232Z"}], "thread_id": "Thread-2", "execution_time": 2.878187894821167, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 495.2 KiB processed)", "code": "CREATE TABLE", "rows_affected": 8049, "bytes_processed": 507087, "bytes_billed": 10485760, "location": "US", "project_id": "first-project-262802", "job_id": "26150215-e1d6-45f8-a7d1-4fd3226d7be5", "slot_ms": 5783}, "message": "CREATE TABLE (8.0k rows, 495.2 KiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_symbols_meta", "compiled": true, "compiled_code": "with \n\nsymbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`base_symbols_meta` )\n\nselect \n    symbol\n    , security_name\n    , listing_exchange\n    , market_category\n    , is_ETF\nfrom symbols_meta", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_symbols_meta`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:48.560397Z", "completed_at": "2024-09-11T17:02:48.578234Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:48.578659Z", "completed_at": "2024-09-11T17:02:55.016389Z"}], "thread_id": "Thread-1", "execution_time": 6.457935094833374, "adapter_response": {"_message": "CREATE TABLE (146.1k rows, 35.6 MiB processed)", "code": "CREATE TABLE", "rows_affected": 146100, "bytes_processed": 37312108, "bytes_billed": 37748736, "location": "US", "project_id": "first-project-262802", "job_id": "1522bd5f-4a6c-4f74-9dc1-14cc4528fb69", "slot_ms": 179841}, "message": "CREATE TABLE (146.1k rows, 35.6 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_calendar", "compiled": true, "compiled_code": "with \n\nbase_calendar as (select * from `first-project-262802`.`stock_analysis`.`base_calendar` )\n\n, adding_month_start_and_end as \n(\n    select\n        *\n        , case when day_of_date = 1 then TRUE else FALSE end as is_month_start\n        , case \n            when ( month_full = 'January' or month_full =  'March' or month_full = 'May' or month_full = 'July'or month_full = 'August' or month_full = 'October' or month_full = 'December') and day_of_date = 31 then TRUE \n            when ( month_full = 'April' or month_full =  'June' or month_full = 'September' or month_full = 'November' ) and day_of_date = 30 then TRUE \n            when month_full = 'February' and ( day_of_date = 28 or day_of_date = 29 ) then TRUE \n            else FALSE \n        end as is_month_end   \n    from base_calendar\n)\n\n, adding_quarter_start_and_end as \n(\n    select\n        *\n        , case \n            when ( month_full = 'January' or month_full =  'April' or month_full = 'July' or month_full = 'October') and is_month_start = TRUE then TRUE\n            else False\n        end as is_quarter_start\n        , case \n            when ( month_full = 'March' or month_full =  'June' or month_full = 'September' or month_full = 'December') and is_month_end = TRUE then TRUE\n            else False\n        end as is_quarter_end    \n    from adding_month_start_and_end\n)\n\n, adding_week_start_and_end as \n(\n    select\n        *\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_week_start\n        , case \n            when day_of_week = 7 then TRUE\n            else False\n        end as is_week_end\n        , case \n            when day_of_week = 1 then TRUE\n            else False\n        end as is_typical_trading_week_start\n        , case \n            when day_of_week = 5 then TRUE\n            else False\n        end as is_typical_trading_week_end\n    from adding_quarter_start_and_end\n)\n\n, base as (select * from adding_week_start_and_end )\n\n, adding_first_working_day_of_year as \n(\n    select\n        TRUE as is_first_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_year as \n(\n    select\n        TRUE as is_last_working_day_of_year\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_month as \n(\n    select\n        TRUE as is_first_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_month as \n(\n    select\n        TRUE as is_last_working_day_of_month \n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date ORDER BY date desc) = 1\n)\n\n, adding_first_working_day_of_week as \n(\n    select\n        TRUE as is_first_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date asc) = 1\n)\n\n, adding_last_working_day_of_week as \n(\n    select\n        TRUE as is_last_working_day_of_week\n        , *\n    from base\n    where is_workday = 1\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_of_date, week_of_month ORDER BY date desc) = 1\n)\n\n\nselect \n    base.*\n\n    , concat(base.year_full,'-',base.week_number) as year_week\n    , concat(base.year_full,'-',base.month_abbrev,'-',base.week_number) as year_month_week\n    , concat(base.year_full,'-',base.month_abbrev) as year_month\n\n    , case when adding_first_working_day_of_year.is_first_working_day_of_year = TRUE then TRUE else FALSE end as is_first_working_day_of_year\n    , case when adding_last_working_day_of_year.is_last_working_day_of_year = TRUE then TRUE else FALSE end as is_last_working_day_of_year \n    \n    , case when adding_first_working_day_of_month.is_first_working_day_of_month = TRUE then TRUE else FALSE end as is_first_working_day_of_month\n    , case when adding_last_working_day_of_month.is_last_working_day_of_month = TRUE then TRUE else FALSE end as is_last_working_day_of_month\n    \n    , case when adding_first_working_day_of_week.is_first_working_day_of_week = TRUE then TRUE else FALSE end as is_first_working_day_of_week\n    , case when adding_last_working_day_of_week.is_last_working_day_of_week = TRUE then TRUE else FALSE end as is_last_working_day_of_week\n\nfrom base\nleft join adding_first_working_day_of_year using (date)\nleft join adding_last_working_day_of_year using (date)\nleft join adding_first_working_day_of_month using (date)\nleft join adding_last_working_day_of_month using (date)\nleft join adding_first_working_day_of_week using (date)\nleft join adding_last_working_day_of_week using (date)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_calendar`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.109399Z", "completed_at": "2024-09-11T17:02:55.156333Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.479450Z", "completed_at": "2024-09-11T17:03:23.836161Z"}], "thread_id": "Thread-18", "execution_time": 28.77376627922058, "adapter_response": {"_message": "CREATE TABLE (1.3k rows, 42.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1294, "bytes_processed": 44094820, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "0d46f37e-93c1-45c0-81c4-14f150b701f6", "slot_ms": 256870}, "message": "CREATE TABLE (1.3k rows, 42.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_hlal_2019_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hlal_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.141609Z", "completed_at": "2024-09-11T17:02:55.351386Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.788954Z", "completed_at": "2024-09-11T17:03:24.191538Z"}], "thread_id": "Thread-31", "execution_time": 29.116780042648315, "adapter_response": {"_message": "CREATE TABLE (1.2k rows, 42.0 MiB processed)", "code": "CREATE TABLE", "rows_affected": 1183, "bytes_processed": 44089492, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "05ca453c-2171-4ae3-a24e-b3d8b4737c5a", "slot_ms": 256564}, "message": "CREATE TABLE (1.2k rows, 42.0 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spus_2019_2024", "compiled": true, "compiled_code": "-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- --   DEPRACATED   -- -- -- -- --\n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n\n\nwith \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spus_2019_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spus_2019_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.146200Z", "completed_at": "2024-09-11T17:02:55.351818Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.853841Z", "completed_at": "2024-09-11T17:03:54.361488Z"}], "thread_id": "Thread-3", "execution_time": 59.28369402885437, "adapter_response": {"_message": "CREATE TABLE (2.5k rows, 42.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 2517, "bytes_processed": 44153524, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "66c3990a-c058-4f3f-b0cd-090bde483503", "slot_ms": 281407}, "message": "CREATE TABLE (2.5k rows, 42.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spy_2014_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spy_2014_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spy_2014_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.123860Z", "completed_at": "2024-09-11T17:02:55.283643Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.646980Z", "completed_at": "2024-09-11T17:04:07.378247Z"}], "thread_id": "Thread-24", "execution_time": 72.30999612808228, "adapter_response": {"_message": "CREATE TABLE (3.1k rows, 42.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3091, "bytes_processed": 44181076, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "97413d84-e6e4-45ce-9f7d-75a4ae291bfc", "slot_ms": 315174}, "message": "CREATE TABLE (3.1k rows, 42.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_meta_2012_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_meta_2012_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_meta_2012_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.064889Z", "completed_at": "2024-09-11T17:02:55.092173Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.125828Z", "completed_at": "2024-09-11T17:04:10.558421Z"}], "thread_id": "Thread-5", "execution_time": 75.52259111404419, "adapter_response": {"_message": "CREATE TABLE (2.9k rows, 42.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 2936, "bytes_processed": 44173636, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "0a7409e0-8f18-47e3-8472-140f2e9c7893", "slot_ms": 370167}, "message": "CREATE TABLE (2.9k rows, 42.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_abbv_2013_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_abbv_2013_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_abbv_2013_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.121998Z", "completed_at": "2024-09-11T17:02:55.280357Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.606394Z", "completed_at": "2024-09-11T17:04:13.550474Z"}], "thread_id": "Thread-23", "execution_time": 78.48236012458801, "adapter_response": {"_message": "CREATE TABLE (4.6k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 4598, "bytes_processed": 44253412, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "6d402456-a7fb-4783-8be6-cdeb49ad588b", "slot_ms": 482161}, "message": "CREATE TABLE (4.6k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_ma_2006_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ma_2006_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ma_2006_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.150223Z", "completed_at": "2024-09-11T17:02:55.353747Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.857354Z", "completed_at": "2024-09-11T17:04:13.867624Z"}], "thread_id": "Thread-1", "execution_time": 78.78886103630066, "adapter_response": {"_message": "CREATE TABLE (3.6k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3568, "bytes_processed": 44203972, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "5ffb1a4c-cccb-4aff-9203-a6b78416f349", "slot_ms": 407475}, "message": "CREATE TABLE (3.6k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_tsla_2010_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tsla_2010_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tsla_2010_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.105195Z", "completed_at": "2024-09-11T17:02:55.155706Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.475247Z", "completed_at": "2024-09-11T17:04:23.225903Z"}], "thread_id": "Thread-16", "execution_time": 88.16412115097046, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 44274772, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "7806fa0e-4f70-48d7-9b00-903578e07163", "slot_ms": 569323}, "message": "CREATE TABLE (5.0k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_googl_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_googl_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_googl_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.102699Z", "completed_at": "2024-09-11T17:02:55.155421Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.413987Z", "completed_at": "2024-09-11T17:04:23.306544Z"}], "thread_id": "Thread-15", "execution_time": 88.2487301826477, "adapter_response": {"_message": "CREATE TABLE (5.0k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5043, "bytes_processed": 44274772, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "5290d813-4e51-48ce-b043-0a97b5fcf990", "slot_ms": 615587}, "message": "CREATE TABLE (5.0k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_goog_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_goog_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_goog_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.083060Z", "completed_at": "2024-09-11T17:02:55.121650Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.157038Z", "completed_at": "2024-09-11T17:04:26.339970Z"}], "thread_id": "Thread-9", "execution_time": 91.292307138443, "adapter_response": {"_message": "CREATE TABLE (3.8k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 3793, "bytes_processed": 44214772, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "7db88eae-28c2-4533-a0d8-b5c98fbe6e54", "slot_ms": 369587}, "message": "CREATE TABLE (3.8k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_avgo_2009_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_avgo_2009_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_avgo_2009_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.132063Z", "completed_at": "2024-09-11T17:02:55.346308Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.718811Z", "completed_at": "2024-09-11T17:04:34.304808Z"}], "thread_id": "Thread-27", "execution_time": 99.23166584968567, "adapter_response": {"_message": "CREATE TABLE (5.6k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5607, "bytes_processed": 44301844, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "e4204643-feb8-45e6-9f6b-e401fce977bb", "slot_ms": 485992}, "message": "CREATE TABLE (5.6k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_nflx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nflx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nflx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.096234Z", "completed_at": "2024-09-11T17:02:55.148074Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.349775Z", "completed_at": "2024-09-11T17:04:52.125229Z"}], "thread_id": "Thread-13", "execution_time": 117.07096576690674, "adapter_response": {"_message": "CREATE TABLE (5.1k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 5083, "bytes_processed": 44276692, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "a3cf359a-ca00-4c07-a8d9-53d5e8d62088", "slot_ms": 394227}, "message": "CREATE TABLE (5.1k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_crm_2004_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_crm_2004_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_crm_2004_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:03:24.198638Z", "completed_at": "2024-09-11T17:03:24.202916Z"}, {"name": "execute", "started_at": "2024-09-11T17:03:24.203197Z", "completed_at": "2024-09-11T17:04:59.810191Z"}], "thread_id": "Thread-31", "execution_time": 95.61261677742004, "adapter_response": {"_message": "CREATE TABLE (4.1k rows, 42.2 MiB processed)", "code": "CREATE TABLE", "rows_affected": 4142, "bytes_processed": 44231524, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "faa6f5ab-c45b-4fa9-bd2b-dc2a0815ba09", "slot_ms": 369849}, "message": "CREATE TABLE (4.1k rows, 42.2 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_v_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_v_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_v_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.137602Z", "completed_at": "2024-09-11T17:02:55.348541Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.721729Z", "completed_at": "2024-09-11T17:05:02.905174Z"}], "thread_id": "Thread-29", "execution_time": 127.8310170173645, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "62addc21-c835-441b-a05c-84816ed16067", "slot_ms": 515691}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_pep_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pep_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pep_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.143709Z", "completed_at": "2024-09-11T17:02:55.351629Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.849546Z", "completed_at": "2024-09-11T17:05:11.801051Z"}], "thread_id": "Thread-32", "execution_time": 136.7234070301056, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "a47dc51b-aa3b-4337-a241-7078539344fd", "slot_ms": 421343}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_spy_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_spy_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_spy_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.135660Z", "completed_at": "2024-09-11T17:02:55.348725Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.785041Z", "completed_at": "2024-09-11T17:05:13.185254Z"}], "thread_id": "Thread-28", "execution_time": 138.1114399433136, "adapter_response": {"_message": "CREATE TABLE (6.4k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6444, "bytes_processed": 44342020, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "fb3c3d9c-9b4d-4e67-a76b-ff403a9178cf", "slot_ms": 402493}, "message": "CREATE TABLE (6.4k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_nvda_1999_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_nvda_1999_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_nvda_1999_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.107237Z", "completed_at": "2024-09-11T17:02:55.155892Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.477845Z", "completed_at": "2024-09-11T17:05:13.945880Z"}], "thread_id": "Thread-17", "execution_time": 138.88368320465088, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "c6f8bbda-18f6-40a2-8edf-7ddca263909c", "slot_ms": 475890}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_hd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_hd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_hd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.058341Z", "completed_at": "2024-09-11T17:02:55.089005Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.118062Z", "completed_at": "2024-09-11T17:05:16.110662Z"}], "thread_id": "Thread-4", "execution_time": 141.07899808883667, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "3647cf25-f0af-4262-bac5-9f7778a48938", "slot_ms": 546528}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_aapl_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_aapl_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_aapl_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.116086Z", "completed_at": "2024-09-11T17:02:55.156648Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.480929Z", "completed_at": "2024-09-11T17:05:20.101180Z"}], "thread_id": "Thread-21", "execution_time": 145.0368938446045, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "6b0e2dda-fb42-43a8-bfa3-ed7ed37d6dfa", "slot_ms": 564971}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_ko_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_ko_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_ko_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.075418Z", "completed_at": "2024-09-11T17:02:55.104984Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.152221Z", "completed_at": "2024-09-11T17:05:22.617118Z"}], "thread_id": "Thread-7", "execution_time": 147.57506918907166, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "097e7c2e-397f-411d-9f60-959f9cf0d886", "slot_ms": 378457}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_amd_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amd_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amd_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.069578Z", "completed_at": "2024-09-11T17:02:55.095375Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.134160Z", "completed_at": "2024-09-11T17:05:23.045744Z"}], "thread_id": "Thread-6", "execution_time": 148.0069522857666, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "91014954-f4c6-475b-9823-5f1c9ca37608", "slot_ms": 551346}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_adbe_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_adbe_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_adbe_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.111362Z", "completed_at": "2024-09-11T17:02:55.156855Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.482662Z", "completed_at": "2024-09-11T17:05:24.145557Z"}], "thread_id": "Thread-19", "execution_time": 149.08256888389587, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "8e3aa7c6-152d-41da-927b-287aacf116bd", "slot_ms": 381289}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_jnj_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jnj_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jnj_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.129477Z", "completed_at": "2024-09-11T17:02:55.346106Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.713698Z", "completed_at": "2024-09-11T17:05:30.854028Z"}], "thread_id": "Thread-26", "execution_time": 155.7811303138733, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "132c313e-4c88-4cf9-bf53-9f808e37cae1", "slot_ms": 442444}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_msft_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_msft_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_msft_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.119679Z", "completed_at": "2024-09-11T17:02:55.221803Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.546572Z", "completed_at": "2024-09-11T17:05:32.856806Z"}], "thread_id": "Thread-22", "execution_time": 157.7890589237213, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "f756608a-12cc-40dd-ae1b-86bccefc65b4", "slot_ms": 525342}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_lly_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_lly_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_lly_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.086266Z", "completed_at": "2024-09-11T17:02:55.121838Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.216929Z", "completed_at": "2024-09-11T17:05:32.950474Z"}], "thread_id": "Thread-10", "execution_time": 157.9017939567566, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "83bad44e-c978-4bb7-974c-1f9d5309df27", "slot_ms": 487409}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_bac_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_bac_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_bac_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.100123Z", "completed_at": "2024-09-11T17:02:55.153727Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.352187Z", "completed_at": "2024-09-11T17:05:35.725939Z"}], "thread_id": "Thread-14", "execution_time": 160.66956186294556, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "41e8620a-37df-4fb3-87eb-8609af7a7cfc", "slot_ms": 696309}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_cvx_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cvx_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cvx_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.148288Z", "completed_at": "2024-09-11T17:02:55.352007Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.855565Z", "completed_at": "2024-09-11T17:05:42.098346Z"}], "thread_id": "Thread-2", "execution_time": 167.0199191570282, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "f770d894-7a77-44b3-b4be-6a1b984098be", "slot_ms": 551497}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_tmo_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_tmo_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_tmo_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.079236Z", "completed_at": "2024-09-11T17:02:55.109231Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.154014Z", "completed_at": "2024-09-11T17:05:43.307612Z"}], "thread_id": "Thread-8", "execution_time": 168.26320719718933, "adapter_response": {"_message": "CREATE TABLE (6.9k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 6869, "bytes_processed": 44362420, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "04a89b9f-c157-4ee2-a8c1-06b189b889f2", "slot_ms": 526125}, "message": "CREATE TABLE (6.9k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_amzn_1997_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_amzn_1997_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_amzn_1997_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:03:23.843432Z", "completed_at": "2024-09-11T17:03:23.848576Z"}, {"name": "execute", "started_at": "2024-09-11T17:03:23.848915Z", "completed_at": "2024-09-11T17:05:48.745481Z"}], "thread_id": "Thread-18", "execution_time": 144.90320086479187, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "5144ebf0-9827-4e6b-b55d-9b40f8321e42", "slot_ms": 565266}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_unh_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_unh_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_unh_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.089943Z", "completed_at": "2024-09-11T17:02:55.133948Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.283943Z", "completed_at": "2024-09-11T17:05:49.729802Z"}], "thread_id": "Thread-11", "execution_time": 174.67894506454468, "adapter_response": {"_message": "CREATE TABLE (7.1k rows, 42.3 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7126, "bytes_processed": 44374756, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "7a1ba45f-1070-4ba6-9b34-ce947ec8357c", "slot_ms": 544648}, "message": "CREATE TABLE (7.1k rows, 42.3 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_brk-b_1996_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_brk-b_1996_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_brk-b_1996_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.139488Z", "completed_at": "2024-09-11T17:02:55.349198Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.787063Z", "completed_at": "2024-09-11T17:05:51.662307Z"}], "thread_id": "Thread-30", "execution_time": 176.58794116973877, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "1e53ec2a-362b-4420-8f80-3f3c5336cfca", "slot_ms": 574913}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_pg_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_pg_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_pg_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.093025Z", "completed_at": "2024-09-11T17:02:55.141405Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.346974Z", "completed_at": "2024-09-11T17:05:57.522486Z"}], "thread_id": "Thread-12", "execution_time": 182.46972489356995, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "43f3bbc1-2f1e-4d97-8f27-d732dbfae242", "slot_ms": 483889}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_cost_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_cost_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_cost_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.127416Z", "completed_at": "2024-09-11T17:02:55.285768Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.653610Z", "completed_at": "2024-09-11T17:06:02.468176Z"}], "thread_id": "Thread-25", "execution_time": 187.3993148803711, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "ac9aba39-f83d-4336-aea3-5a29b4b39d2d", "slot_ms": 487517}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_mrk_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_mrk_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_mrk_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:02:55.113380Z", "completed_at": "2024-09-11T17:02:55.216684Z"}, {"name": "execute", "started_at": "2024-09-11T17:02:55.484237Z", "completed_at": "2024-09-11T17:06:31.563612Z"}], "thread_id": "Thread-20", "execution_time": 216.50006794929504, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "b6b06b88-8061-4eb9-938d-79f74b64d23c", "slot_ms": 598731}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_jpm_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_jpm_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_jpm_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:03:54.368473Z", "completed_at": "2024-09-11T17:03:54.375627Z"}, {"name": "execute", "started_at": "2024-09-11T17:03:54.375928Z", "completed_at": "2024-09-11T17:06:53.852523Z"}], "thread_id": "Thread-3", "execution_time": 179.48505687713623, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "39dea0ae-48b8-4737-a4d7-700997a38733", "slot_ms": 612318}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_wmt_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_wmt_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_wmt_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:04:07.385270Z", "completed_at": "2024-09-11T17:04:07.392354Z"}, {"name": "execute", "started_at": "2024-09-11T17:04:07.392774Z", "completed_at": "2024-09-11T17:07:14.583865Z"}], "thread_id": "Thread-24", "execution_time": 187.2002260684967, "adapter_response": {"_message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "code": "CREATE TABLE", "rows_affected": 7954, "bytes_processed": 44414500, "bytes_billed": 45088768, "location": "US", "project_id": "first-project-262802", "job_id": "4843b180-faa0-4945-b47c-9337670231fc", "slot_ms": 479602}, "message": "CREATE TABLE (8.0k rows, 42.4 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stg_xom_1993_2024", "compiled": true, "compiled_code": "with \n\nstock as ( select * from `first-project-262802`.`stock_analysis`.`base_xom_1993_2024` )\n\n, calendar as ( select * from `first-project-262802`.`stock_analysis`.`stg_calendar` )\n\n, base as \n(\n    select \n        *\n        , round(((open + close_last + high + low)/4.00),2) as avg_daily_price\n    from stock\n    left join calendar using (date)\n)\n\n, weekly_price as \n(\n    select \n        year_full\n        , week_number\n        , round(avg(avg_daily_price),2) as avg_weekly_price\n        , round(sum(volume)/7) as avg_weekly_volume\n    from base\n    group by 1,2\n)\n\n, monthly_price as \n(\n    select \n        year_full\n        , month_number\n        , round(avg(avg_daily_price),2) as avg_monthly_price\n    from base\n    group by 1,2\n)\n\n, yearly_price as \n(\n    select \n        year_full\n        , round(avg(avg_daily_price),2) as avg_yearly_price\n    from base\n    group by 1\n)\n\n\n\n\n, first_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_week as \n(\n    select \n        year_full\n        , week_number\n        , avg_daily_price as avg_daily_price_week_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, week_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_week as \n(\n    select\n        year_full\n        , week_number\n        , round(avg_daily_price_week_end - avg_daily_price_week_start,2) as avg_daily_price_movement_in_week\n        , round(((avg_daily_price_week_end/avg_daily_price_week_start)-1)*100.00,2) as avg_daily_price_movement_in_week_pct\n    from base\n    left join first_avg_daily_price_per_week using (year_full,week_number)\n    left join last_avg_daily_price_per_week using (year_full,week_number)\n)\n\n\n\n\n, first_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_month as \n(\n    select \n        year_full\n        , month_number\n        , avg_daily_price as avg_daily_price_month_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date, month_number ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_month as \n(\n    select\n        year_full\n        , month_number\n        , round(avg_daily_price_month_end - avg_daily_price_month_start,2) as avg_daily_price_movement_in_month\n        , round(((avg_daily_price_month_end/avg_daily_price_month_start)-1)*100.00,2) as avg_daily_price_movement_in_month_pct\n    from base\n    left join first_avg_daily_price_per_month using (year_full,month_number)\n    left join last_avg_daily_price_per_month using (year_full,month_number)\n)\n\n\n\n\n\n\n, first_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_start\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date asc) = 1\n)\n\n, last_avg_daily_price_per_year as \n(\n    select \n        year_full\n        , avg_daily_price as avg_daily_price_year_end\n    from base\n    QUALIFY ROW_NUMBER() OVER (PARTITION BY year_of_date ORDER BY date desc) = 1\n)\n\n, daily_price_movement_in_year as \n(\n    select\n        year_full\n        , round(avg_daily_price_year_end - avg_daily_price_year_start,2) as avg_daily_price_movement_in_year\n        , round(((avg_daily_price_year_end/avg_daily_price_year_start)-1)*100.00,2) as avg_daily_price_movement_in_year_pct\n    from base\n    left join first_avg_daily_price_per_year using (year_full)\n    left join last_avg_daily_price_per_year using (year_full)\n)\n\n\n\n\nselect\n    distinct *\nfrom base\nleft join weekly_price using (year_full,week_number)\nleft join monthly_price using (year_full,month_number)\nleft join yearly_price using (year_full)\nleft join daily_price_movement_in_week using (year_full,week_number)\nleft join daily_price_movement_in_month using (year_full,month_number)\nleft join daily_price_movement_in_year using (year_full)", "relation_name": "`first-project-262802`.`stock_analysis`.`stg_xom_1993_2024`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:07:14.593217Z", "completed_at": "2024-09-11T17:07:14.614561Z"}, {"name": "execute", "started_at": "2024-09-11T17:07:14.615153Z", "completed_at": "2024-09-11T17:07:22.541883Z"}], "thread_id": "Thread-5", "execution_time": 7.950127124786377, "adapter_response": {"_message": "CREATE TABLE (224.9k rows, 92.1 MiB processed)", "code": "CREATE TABLE", "rows_affected": 224900, "bytes_processed": 96544062, "bytes_billed": 367001600, "location": "US", "project_id": "first-project-262802", "job_id": "66597fd3-3b03-4142-8aae-c4f1a2085880", "slot_ms": 28478}, "message": "CREATE TABLE (224.9k rows, 92.1 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.int_stock_analysis", "compiled": true, "compiled_code": "with\n\nspy as ( select * from `first-project-262802`.`stock_analysis`.`stg_spy_1993_2024` )\n, spus as ( select * from `first-project-262802`.`stock_analysis`.`stg_spus_2019_2024` )\n, hlal as ( select * from `first-project-262802`.`stock_analysis`.`stg_hlal_2019_2024` )\n\n, aapl as ( select * from `first-project-262802`.`stock_analysis`.`stg_aapl_1993_2024` )\n, abbv as ( select * from `first-project-262802`.`stock_analysis`.`stg_abbv_2013_2024` )\n, adbe as ( select * from `first-project-262802`.`stock_analysis`.`stg_adbe_1993_2024` )\n, amd as ( select * from `first-project-262802`.`stock_analysis`.`stg_amd_1993_2024` )\n, amzn as ( select * from `first-project-262802`.`stock_analysis`.`stg_amzn_1997_2024` )\n, avgo as ( select * from `first-project-262802`.`stock_analysis`.`stg_avgo_2009_2024` )\n, bac as ( select * from `first-project-262802`.`stock_analysis`.`stg_bac_1993_2024` )\n, brk_b as ( select * from `first-project-262802`.`stock_analysis`.`stg_brk-b_1996_2024` )\n, cost as ( select * from `first-project-262802`.`stock_analysis`.`stg_cost_1993_2024` )\n, crm as ( select * from `first-project-262802`.`stock_analysis`.`stg_crm_2004_2024` )\n, cvx as ( select * from `first-project-262802`.`stock_analysis`.`stg_cvx_1993_2024` )\n, goog as ( select * from `first-project-262802`.`stock_analysis`.`stg_goog_2004_2024` )\n, googl as ( select * from `first-project-262802`.`stock_analysis`.`stg_googl_2004_2024` )\n, hd as ( select * from `first-project-262802`.`stock_analysis`.`stg_hd_1993_2024` )\n, jnj as ( select * from `first-project-262802`.`stock_analysis`.`stg_jnj_1993_2024` )\n, jpm as ( select * from `first-project-262802`.`stock_analysis`.`stg_jpm_1993_2024` )\n, ko as ( select * from `first-project-262802`.`stock_analysis`.`stg_ko_1993_2024` )\n, lly as ( select * from `first-project-262802`.`stock_analysis`.`stg_lly_1993_2024` )\n, ma as ( select * from `first-project-262802`.`stock_analysis`.`stg_ma_2006_2024` )\n, meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_meta_2012_2024` )\n, mrk as ( select * from `first-project-262802`.`stock_analysis`.`stg_mrk_1993_2024` )\n, msft as ( select * from `first-project-262802`.`stock_analysis`.`stg_msft_1993_2024` )\n, nflx as ( select * from `first-project-262802`.`stock_analysis`.`stg_nflx_1993_2024` )\n, nvda as ( select * from `first-project-262802`.`stock_analysis`.`stg_nvda_1999_2024` )\n, pep as ( select * from `first-project-262802`.`stock_analysis`.`stg_pep_1993_2024` )\n, pg as ( select * from `first-project-262802`.`stock_analysis`.`stg_pg_1993_2024` )\n, tmo as ( select * from `first-project-262802`.`stock_analysis`.`stg_tmo_1993_2024` )\n, tsla as ( select * from `first-project-262802`.`stock_analysis`.`stg_tsla_2010_2024` )\n, unh as ( select * from `first-project-262802`.`stock_analysis`.`stg_unh_1993_2024` )\n, v as ( select * from `first-project-262802`.`stock_analysis`.`stg_v_1993_2024` )\n, wmt as ( select * from `first-project-262802`.`stock_analysis`.`stg_wmt_1993_2024` )\n, xom as ( select * from `first-project-262802`.`stock_analysis`.`stg_xom_1993_2024` )\n\n\nselect * , 'SPY' as symbol from spy\nunion all\nselect * , 'SPUS' as symbol from spus\nunion all\nselect * , 'HLAL' as symbol from hlal\nunion all\n\nselect * , 'AAPL' as symbol from aapl\nunion all\nselect * , 'ABBV' as symbol from abbv\nunion all\nselect * , 'ADBE' as symbol from adbe\nunion all\nselect * , 'AMD' as symbol from amd\nunion all\nselect * , 'AMZN' as symbol from amzn\nunion all\nselect * , 'AVGO' as symbol from avgo\nunion all\nselect * , 'BAC' as symbol from bac\nunion all\nselect * , 'BRK-B' as symbol from brk_b\nunion all\nselect * , 'COST' as symbol from cost\nunion all\nselect * , 'CRM' as symbol from crm\nunion all\nselect * , 'CVX' as symbol from cvx\nunion all\nselect * , 'GOOG' as symbol from goog\nunion all\nselect * , 'GOOGL' as symbol from googl\nunion all\nselect * , 'HD' as symbol from hd\nunion all\nselect * , 'JNJ' as symbol from jnj\nunion all\nselect * , 'JPM' as symbol from jpm\nunion all\nselect * , 'KO' as symbol from ko\nunion all\nselect * , 'LLY' as symbol from lly\nunion all\nselect * , 'MA' as symbol from ma\nunion all\nselect * , 'META' as symbol from meta\nunion all\nselect * , 'MRK' as symbol from mrk\nunion all\nselect * , 'MSFT' as symbol from msft\nunion all\nselect * , 'NFLX' as symbol from nflx\nunion all\nselect * , 'NVDA' as symbol from nvda\nunion all\nselect * , 'PEP' as symbol from pep\nunion all\nselect * , 'PG' as symbol from pg\nunion all\nselect * , 'TMO' as symbol from tmo\nunion all\nselect * , 'TSLA' as symbol from tsla\nunion all\nselect * , 'UNH' as symbol from unh\nunion all\nselect * , 'V' as symbol from v\nunion all\nselect * , 'WMT' as symbol from wmt\nunion all\nselect * , 'XOM' as symbol from xom", "relation_name": "`first-project-262802`.`stock_analysis`.`int_stock_analysis`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-09-11T17:07:22.550467Z", "completed_at": "2024-09-11T17:07:22.558825Z"}, {"name": "execute", "started_at": "2024-09-11T17:07:22.559386Z", "completed_at": "2024-09-11T17:07:31.500700Z"}], "thread_id": "Thread-1", "execution_time": 8.951492071151733, "adapter_response": {"_message": "CREATE TABLE (224.9k rows, 93.7 MiB processed)", "code": "CREATE TABLE", "rows_affected": 224900, "bytes_processed": 98234887, "bytes_billed": 98566144, "location": "US", "project_id": "first-project-262802", "job_id": "1c0277a3-ca46-40ad-85fb-26779a33e7a9", "slot_ms": 26645}, "message": "CREATE TABLE (224.9k rows, 93.7 MiB processed)", "failures": null, "unique_id": "model.stock_analysis.stock_analysis", "compiled": true, "compiled_code": "with\n\nstock_analysis as ( select * from `first-project-262802`.`stock_analysis`.`int_stock_analysis` )\n\n, symbols_meta as ( select * from `first-project-262802`.`stock_analysis`.`stg_symbols_meta` )\n\nselect\n    *\nfrom stock_analysis\nleft join symbols_meta using (symbol)", "relation_name": "`first-project-262802`.`stock_analysis`.`stock_analysis`"}], "elapsed_time": 283.80943393707275, "args": {"vars": {}, "introspect": true, "populate_cache": true, "which": "run", "log_format": "default", "defer": false, "exclude": [], "enable_legacy_logger": false, "print": true, "project_dir": "/Users/ahmed/Desktop/dbt/stock_analysis", "source_freshness_run_project_hooks": false, "favor_state": false, "select": ["path:models/2_staging", "path:models/3_intermediary", "path:models/4_final"], "use_colors": true, "partial_parse_file_diff": true, "require_explicit_package_overrides_for_builtin_materializations": true, "strict_mode": false, "profiles_dir": "/Users/ahmed/.dbt", "use_colors_file": true, "log_level_file": "debug", "version_check": true, "show_resource_report": false, "partial_parse": true, "printer_width": 80, "invocation_command": "dbt run --select path:models/2_staging path:models/3_intermediary path:models/4_final", "indirect_selection": "eager", "cache_selected_only": false, "log_level": "info", "send_anonymous_usage_stats": true, "write_json": true, "require_resource_names_without_spaces": false, "warn_error_options": {"include": [], "exclude": []}, "log_format_file": "debug", "static_parser": true, "log_file_max_bytes": 10485760, "empty": false, "macro_debugging": false, "quiet": false, "log_path": "/Users/ahmed/Desktop/dbt/stock_analysis/logs"}}